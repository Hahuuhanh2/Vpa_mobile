package al;

import a1.e;
import al.i1;
import android.content.Context;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.util.Log;
import android.util.TypedValue;
import androidx.datastore.core.CorruptionException;
import androidx.lifecycle.k;
import androidx.lifecycle.o;
import ca.f;
import com.google.android.gms.tasks.Continuation;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.Task;
import dc.q;
import ek.i;
import f0.b0;
import fl.m;
import fl.v;
import g5.b;
import h5.g;
import hd.c;
import java.io.File;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.ArrayDeque;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CancellationException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
import l4.c0;
import o5.a;
import p3.l0;
import rk.p;
import s4.d;
import sk.j;
import u4.u;
import uc.l;
import x3.s;
import xb.z;
import y2.a;
import yk.h;

/* compiled from: DebugStrings.kt */
public class g0 implements a, d, b, g, c, l, q, Continuation, f2.a, f, c0, OnFailureListener, qa.b, w4.a, jf.c, z {

    /* renamed from: a  reason: collision with root package name */
    public static g0 f19018a;

    /* renamed from: b  reason: collision with root package name */
    public static final g0 f19019b = new g0();

    /* renamed from: c  reason: collision with root package name */
    public static final u9.b f19020c = new u9.b("NULL", 1);

    /* renamed from: d  reason: collision with root package name */
    public static final u9.b f19021d = new u9.b("UNINITIALIZED", 1);

    /* renamed from: e  reason: collision with root package name */
    public static final u9.b f19022e = new u9.b("UNDEFINED", 1);

    /* renamed from: f  reason: collision with root package name */
    public static final u9.b f19023f = new u9.b("REUSABLE_CLAIMED", 1);

    /* renamed from: n  reason: collision with root package name */
    public static final /* synthetic */ g0 f19024n = new g0();

    /* renamed from: o  reason: collision with root package name */
    public static final u9.b f19025o = new u9.b("NO_OWNER", 1);

    /* renamed from: p  reason: collision with root package name */
    public static final String[] f19026p = {"\nABCDEFGHIJKLMNOPQRSTUVWXYZ￺\u001c\u001d\u001e￻ ￼\"#$%&'()*+,-./0123456789:￱￲￳￴￸", "`abcdefghijklmnopqrstuvwxyz￺\u001c\u001d\u001e￻{￼}~;<=>?[\\]^_ ,./:@!|￼￵￶￼￰￲￳￴￷", "ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚ￺\u001c\u001d\u001eÛÜÝÞßª¬±²³µ¹º¼½¾￷ ￹￳￴￸", "àáâãäåæçèéêëìíîïðñòóôõö÷øùú￺\u001c\u001d\u001e￻ûüýþÿ¡¨«¯°´·¸»¿￷ ￲￹￴￸", "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a￺￼￼\u001b￻\u001c\u001d\u001e\u001f ¢£¤¥¦§©­®¶￷ ￲￳￹￸", "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?"};

    /* renamed from: q  reason: collision with root package name */
    public static final g0 f19027q = new g0();

    /* renamed from: r  reason: collision with root package name */
    public static final /* synthetic */ g0 f19028r = new g0();

    /* renamed from: s  reason: collision with root package name */
    public static g0 f19029s;

    /* renamed from: t  reason: collision with root package name */
    public static final String[] f19030t = {"ad_activeview", "ad_click", "ad_exposure", "ad_query", "ad_reward", "adunit_exposure", "app_clear_data", "app_exception", "app_remove", "app_store_refund", "app_store_subscription_cancel", "app_store_subscription_convert", "app_store_subscription_renew", "app_upgrade", "app_update", "ga_campaign", "error", "first_open", "first_visit", "in_app_purchase", "notification_dismiss", "notification_foreground", "notification_open", "notification_receive", "os_update", "session_start", "session_start_with_rollout", "user_engagement", "ad_impression", "screen_view", "ga_extra_parameter", "app_background", "firebase_campaign"};

    /* renamed from: u  reason: collision with root package name */
    public static final String[] f19031u = {"_aa", "_ac", "_xa", "_aq", "_ar", "_xu", "_cd", "_ae", "_ui", "app_store_refund", "app_store_subscription_cancel", "app_store_subscription_convert", "app_store_subscription_renew", "_ug", "_au", "_cmp", "_err", "_f", "_v", "_iap", "_nd", "_nf", "_no", "_nr", "_ou", "_s", "_ssr", "_e", "_ai", "_vs", "_ep", "_ab", "_cmp"};

    /* renamed from: v  reason: collision with root package name */
    public static final int[][] f19032v = {new int[]{120256, 125680, 128380, 120032, 125560, 128318, 108736, 119920, 108640, 86080, 108592, 86048, 110016, 120560, 125820, 109792, 120440, 125758, 88256, 109680, 88160, 89536, 110320, 120700, 89312, 110200, 120638, 89200, 110140, 89840, 110460, 89720, 110398, 89980, 128506, 119520, 125304, 128190, 107712, 119408, 125244, 107616, 119352, 84032, 107568, 119324, 84000, 107544, 83984, 108256, 119672, 125374, 85184, 108144, 119612, 85088, 108088, 119582, 85040, 108060, 85728, 108408, 119742, 85616, 108348, 85560, 108318, 85880, 108478, 85820, 85790, 107200, 119152, 125116, 107104, 119096, 125086, 83008, 107056, 119068, 82976, 107032, 82960, 82952, 83648, 107376, 119228, 83552, 107320, 119198, 83504, 107292, 83480, 83468, 83824, 107452, 83768, 107422, 83740, 83900, 106848, 118968, 125022, 82496, 106800, 118940, 82464, 106776, 118926, 82448, 106764, 82440, 106758, 82784, 106936, 119006, 82736, 106908, 82712, 106894, 82700, 82694, 106974, 82830, 82240, 106672, 118876, 82208, 106648, 118862, 82192, 106636, 82184, 106630, 82180, 82352, 82328, 82316, 82080, 118830, 106572, 106566, 82050, 117472, 124280, 127678, 103616, 117360, 124220, 103520, 117304, 124190, 75840, 103472, 75808, 104160, 117624, 124350, 76992, 104048, 117564, 76896, 103992, 76848, 76824, 77536, 104312, 117694, 77424, 104252, 77368, 77340, 77688, 104382, 77628, 77758, 121536, 126320, 128700, 121440, 126264, 128670, 111680, 121392, 126236, 111648, 121368, 126222, 111632, 121356, 103104, 117104, 124092, 112320, 103008, 117048, 124062, 112224, 121656, 126366, 93248, 74784, 102936, 117006, 93216, 112152, 93200, 75456, 103280, 117180, 93888, 75360, 103224, 117150, 93792, 112440, 121758, 93744, 75288, 93720, 75632, 103356, 94064, 75576, 103326, 94008, 112542, 93980, 75708, 94140, 75678, 94110, 121184, 126136, 128606, 111168, 121136, 126108, 111136, 121112, 126094, 111120, 121100, 111112, 111108, 102752, 116920, 123998, 111456, 102704, 116892, 91712, 74272, 121244, 116878, 91680, 74256, 102668, 91664, 111372, 102662, 74244, 74592, 102840, 116958, 92000, 74544, 102812, 91952, 111516, 102798, 91928, 74508, 74502, 74680, 102878, 92088, 74652, 92060, 74638, 92046, 92126, 110912, 121008, 126044, 110880, 120984, 126030, 110864, 120972, 110856, 120966, 110852, 110850, 74048, 102576, 116828, 90944, 74016, 102552, 116814, 90912, 111000, 121038, 90896, 73992, 102534, 90888, 110982, 90884, 74160, 102620, 91056, 74136, 102606, 91032, 111054, 91020, 74118, 91014, 91100, 91086, 110752, 120920, 125998, 110736, 120908, 110728, 120902, 110724, 110722, 73888, 102488, 116782, 90528, 73872, 102476, 90512, 110796, 102470, 90504, 73860, 90500, 73858, 73944, 90584, 90572, 90566, 120876, 120870, 110658, 102444, 73800, 90312, 90308, 90306, 101056, 116080, 123580, 100960, 116024, 70720, 100912, 115996, 70688, 100888, 70672, 70664, 71360, 101232, 116156, 71264, 101176, 116126, 71216, 101148, 71192, 71180, 71536, 101308, 71480, 101278, 71452, 71612, 71582, 118112, 124600, 127838, 105024, 118064, 124572, 104992, 118040, 124558, 104976, 118028, 104968, 118022, 100704, 115896, 123486, 105312, 100656, 115868, 79424, 70176, 118172, 115854, 79392, 105240, 100620, 79376, 70152, 79368, 70496, 100792, 115934, 79712, 70448, 118238, 79664, 105372, 100750, 79640, 70412, 79628, 70584, 100830, 79800, 70556, 79772, 70542, 70622, 79838, 122176, 126640, 128860, 122144, 126616, 128846, 122128, 126604, 122120, 126598, 122116, 104768, 117936, 124508, 113472, 104736, 126684, 124494, 113440, 122264, 126670, 113424, 104712, 117894, 113416, 122246, 104706, 69952, 100528, 115804, 78656, 69920, 100504, 115790, 96064, 78624, 104856, 117966, 96032, 113560, 122318, 100486, 96016, 78600, 104838, 96008, 69890, 70064, 100572, 78768, 70040, 100558, 96176, 78744, 104910, 96152, 113614, 70022, 78726, 70108, 78812, 70094, 96220, 78798, 122016, 126552, 128814, 122000, 126540, 121992, 126534, 121988, 121986, 104608, 117848, 124462, 113056, 104592, 126574, 113040, 122060, 117830, 113032, 104580, 113028, 104578, 113026, 69792, 100440, 115758, 78240, 69776, 100428, 95136, 78224, 104652, 100422, 95120, 113100, 69764, 95112, 78212, 69762, 78210, 69848, 100462, 78296, 69836, 95192, 78284, 69830, 95180, 78278, 69870, 95214, 121936, 126508, 121928, 126502, 121924, 121922, 104528, 117804, 112848, 104520, 117798, 112840, 121958, 112836, 104514, 112834, 69712, 100396, 78032, 69704, 100390, 94672, 78024, 104550, 94664, 112870, 69698, 94660, 78018, 94658, 78060, 94700, 94694, 126486, 121890, 117782, 104484, 104482, 69672, 77928, 94440, 69666, 77922, 99680, 68160, 99632, 68128, 99608, 115342, 68112, 99596, 68104, 99590, 68448, 99768, 115422, 68400, 99740, 68376, 99726, 68364, 68358, 68536, 99806, 68508, 68494, 68574, 101696, 116400, 123740, 101664, 116376, 101648, 116364, 101640, 116358, 101636, 67904, 99504, 115292, 72512, 67872, 116444, 115278, 72480, 101784, 116430, 72464, 67848, 99462, 72456, 101766, 67842, 68016, 99548, 72624, 67992, 99534, 72600, 101838, 72588, 67974, 68060, 72668, 68046, 72654, 118432, 124760, 127918, 118416, 124748, 118408, 124742, 118404, 118402, 101536, 116312, 105888, 101520, 116300, 105872, 118476, 116294, 105864, 101508, 105860, 101506, 105858, 67744, 99416, 72096, 67728, 116334, 80800, 72080, 101580, 99398, 80784, 105932, 67716, 80776, 72068, 67714, 72066, 67800, 99438, 72152, 67788, 80856, 72140, 67782, 80844, 72134, 67822, 72174, 80878, 126800, 128940, 126792, 128934, 126788, 126786, 118352, 124716, 122576, 126828, 124710, 122568, 126822, 122564, 118338, 122562, 101456, 116268, 105680, 101448, 116262, 114128, 105672, 118374, 114120, 122598, 101442, 114116, 105666, 114114, 67664, 99372, 71888, 67656, 99366, 80336, 71880, 101478, 97232, 80328, 105702, 67650, 97224, 114150, 71874, 97220, 67692, 71916, 67686, 80364, 71910, 97260, 80358, 97254, 126760, 128918, 126756, 126754, 118312, 124694, 122472, 126774, 122468, 118306, 122466, 101416, 116246, 105576, 101412, 113896, 105572, 101410, 113892, 105570, 113890, 67624, 99350, 71784, 101430, 80104, 71780, 67618, 96744, 80100, 71778, 96740, 80098, 96738, 71798, 96758, 126738, 122420, 122418, 105524, 113780, 113778, 71732, 79988, 96500, 96498, 66880, 66848, 98968, 66832, 66824, 66820, 66992, 66968, 66956, 66950, 67036, 67022, 100000, 99984, 115532, 99976, 115526, 99972, 99970, 66720, 98904, 69024, 100056, 98892, 69008, 100044, 69000, 100038, 68996, 66690, 68994, 66776, 98926, 69080, 100078, 69068, 66758, 69062, 66798, 69102, 116560, 116552, 116548, 116546, 99920, 102096, 116588, 115494, 102088, 116582, 102084, 99906, 102082, 66640, 68816, 66632, 98854, 73168, 68808, 66628, 73160, 68804, 66626, 73156, 68802, 66668, 68844, 66662, 73196, 68838, 73190, 124840, 124836, 124834, 116520, 118632, 124854, 118628, 116514, 118626, 99880, 115478, 101992, 116534, 106216, 101988, 99874, 106212, 101986, 106210, 66600, 98838, 68712, 99894, 72936, 68708, 66594, 81384, 72932, 68706, 81380, 72930, 66614, 68726, 72950, 81398, 128980, 128978, 124820, 126900, 124818, 126898, 116500, 118580, 116498, 122740, 118578, 122738, 99860, 101940, 99858, 106100, 101938, 114420}, new int[]{128352, 129720, 125504, 128304, 129692, 125472, 128280, 129678, 125456, 128268, 125448, 128262, 125444, 125792, 128440, 129758, 120384, 125744, 128412, 120352, 125720, 128398, 120336, 125708, 120328, 125702, 120324, 120672, 125880, 128478, 110144, 120624, 125852, 110112, 120600, 125838, 110096, 120588, 110088, 120582, 110084, 110432, 120760, 125918, 89664, 110384, 120732, 89632, 110360, 120718, 89616, 110348, 89608, 110342, 89952, 110520, 120798, 89904, 110492, 89880, 110478, 89868, 90040, 110558, 90012, 89998, 125248, 128176, 129628, 125216, 128152, 129614, 125200, 128140, 125192, 128134, 125188, 125186, 119616, 125360, 128220, 119584, 125336, 128206, 119568, 125324, 119560, 125318, 119556, 119554, 108352, 119728, 125404, 108320, 119704, 125390, 108304, 119692, 108296, 119686, 108292, 108290, 85824, 108464, 119772, 85792, 108440, 119758, 85776, 108428, 85768, 108422, 85764, 85936, 108508, 85912, 108494, 85900, 85894, 85980, 85966, 125088, 128088, 129582, 125072, 128076, 125064, 128070, 125060, 125058, 119200, 125144, 128110, 119184, 125132, 119176, 125126, 119172, 119170, 107424, 119256, 125166, 107408, 119244, 107400, 119238, 107396, 107394, 83872, 107480, 119278, 83856, 107468, 83848, 107462, 83844, 83842, 83928, 107502, 83916, 83910, 83950, 125008, 128044, 125000, 128038, 124996, 124994, 118992, 125036, 118984, 125030, 118980, 118978, 106960, 119020, 106952, 119014, 106948, 106946, 82896, 106988, 82888, 106982, 82884, 82882, 82924, 82918, 124968, 128022, 124964, 124962, 118888, 124982, 118884, 118882, 106728, 118902, 106724, 106722, 82408, 106742, 82404, 82402, 124948, 124946, 118836, 118834, 106612, 106610, 124224, 127664, 129372, 124192, 127640, 129358, 124176, 127628, 124168, 127622, 124164, 124162, 117568, 124336, 127708, 117536, 124312, 127694, 117520, 124300, 117512, 124294, 117508, 117506, 104256, 117680, 124380, 104224, 117656, 124366, 104208, 117644, 104200, 117638, 104196, 104194, 77632, 104368, 117724, 77600, 104344, 117710, 77584, 104332, 77576, 104326, 77572, 77744, 104412, 77720, 104398, 77708, 77702, 77788, 77774, 128672, 129880, 93168, 128656, 129868, 92664, 128648, 129862, 92412, 128644, 128642, 124064, 127576, 129326, 126368, 124048, 129902, 126352, 128716, 127558, 126344, 124036, 126340, 124034, 126338, 117152, 124120, 127598, 121760, 117136, 124108, 121744, 126412, 124102, 121736, 117124, 121732, 117122, 121730, 103328, 117208, 124142, 112544, 103312, 117196, 112528, 121804, 117190, 112520, 103300, 112516, 103298, 112514, 75680, 103384, 117230, 94112, 75664, 103372, 94096, 112588, 103366, 94088, 75652, 94084, 75650, 75736, 103406, 94168, 75724, 94156, 75718, 94150, 75758, 128592, 129836, 91640, 128584, 129830, 91388, 128580, 91262, 128578, 123984, 127532, 126160, 123976, 127526, 126152, 128614, 126148, 123970, 126146, 116944, 124012, 121296, 116936, 124006, 121288, 126182, 121284, 116930, 121282, 102864, 116972, 111568, 102856, 116966, 111560, 121318, 111556, 102850, 111554, 74704, 102892, 92112, 74696, 102886, 92104, 111590, 92100, 74690, 92098, 74732, 92140, 74726, 92134, 128552, 129814, 90876, 128548, 90750, 128546, 123944, 127510, 126056, 128566, 126052, 123938, 126050, 116840, 123958, 121064, 116836, 121060, 116834, 121058, 102632, 116854, 111080, 121078, 111076, 102626, 111074, 74216, 102646, 91112, 74212, 91108, 74210, 91106, 74230, 91126, 128532, 90494, 128530, 123924, 126004, 123922, 126002, 116788, 120948, 116786, 120946, 102516, 110836, 102514, 110834, 73972, 90612, 73970, 90610, 128522, 123914, 125978, 116762, 120890, 102458, 110714, 123552, 127320, 129198, 123536, 127308, 123528, 127302, 123524, 123522, 116128, 123608, 127342, 116112, 123596, 116104, 123590, 116100, 116098, 101280, 116184, 123630, 101264, 116172, 101256, 116166, 101252, 101250, 71584, 101336, 116206, 71568, 101324, 71560, 101318, 71556, 71554, 71640, 101358, 71628, 71622, 71662, 127824, 129452, 79352, 127816, 129446, 79100, 127812, 78974, 127810, 123472, 127276, 124624, 123464, 127270, 124616, 127846, 124612, 123458, 124610, 115920, 123500, 118224, 115912, 123494, 118216, 124646, 118212, 115906, 118210, 100816, 115948, 105424, 100808, 115942, 105416, 118246, 105412, 100802, 105410, 70608, 100844, 79824, 70600, 100838, 79816, 105446, 79812, 70594, 79810, 70636, 79852, 70630, 79846, 129960, 95728, 113404, 129956, 95480, 113278, 129954, 95356, 95294, 127784, 129430, 78588, 128872, 129974, 95996, 78462, 128868, 127778, 95870, 128866, 123432, 127254, 124520, 123428, 126696, 128886, 123426, 126692, 124514, 126690, 115816, 123446, 117992, 115812, 122344, 117988, 115810, 122340, 117986, 122338, 100584, 115830, 104936, 100580, 113640, 104932, 100578, 113636, 104930, 113634, 70120, 100598, 78824, 70116, 96232, 78820, 70114, 96228, 78818, 96226, 70134, 78838, 129940, 94968, 113022, 129938, 94844, 94782, 127764, 78206, 128820, 127762, 95102, 128818, 123412, 124468, 123410, 126580, 124466, 126578, 115764, 117876, 115762, 122100, 117874, 122098, 100468, 104692, 100466, 113140, 104690, 113138, 69876, 78324, 69874, 95220, 78322, 95218, 129930, 94588, 94526, 127754, 128794, 123402, 124442, 126522, 115738, 117818, 121978, 100410, 104570, 112890, 69754, 78074, 94714, 94398, 123216, 127148, 123208, 127142, 123204, 123202, 115408, 123244, 115400, 123238, 115396, 115394, 99792, 115436, 99784, 115430, 99780, 99778, 68560, 99820, 68552, 99814, 68548, 68546, 68588, 68582, 127400, 129238, 72444, 127396, 72318, 127394, 123176, 127126, 123752, 123172, 123748, 123170, 123746, 115304, 123190, 116456, 115300, 116452, 115298, 116450, 99560, 115318, 101864, 99556, 101860, 99554, 101858, 68072, 99574, 72680, 68068, 72676, 68066, 72674, 68086, 72694, 129492, 80632, 105854, 129490, 80508, 80446, 127380, 72062, 127924, 127378, 80766, 127922, 123156, 123700, 123154, 124788, 123698, 124786, 115252, 116340, 115250, 118516, 116338, 118514, 99444, 101620, 99442, 105972, 101618, 105970, 67828, 72180, 67826, 80884, 72178, 80882, 97008, 114044, 96888, 113982, 96828, 96798, 129482, 80252, 130010, 97148, 80190, 97086, 127370, 127898, 128954, 123146, 123674, 124730, 126842, 115226, 116282, 118394, 122618, 99386, 101498, 105722, 114170, 67706, 71930, 80378, 96632, 113854, 96572, 96542, 80062, 96702, 96444, 96414, 96350, 123048, 123044, 123042, 115048, 123062, 115044, 115042, 99048, 115062, 99044, 99042, 67048, 99062, 67044, 67042, 67062, 127188, 68990, 127186, 123028, 123316, 123026, 123314, 114996, 115572, 114994, 115570, 98932, 100084, 98930, 100082, 66804, 69108, 66802, 69106, 129258, 73084, 73022, 127178, 127450, 123018, 123290, 123834, 114970, 115514, 116602, 98874, 99962, 102138, 66682, 68858, 73210, 81272, 106174, 81212, 81182, 72894, 81342, 97648, 114364, 97592, 114334, 97564, 97550, 81084, 97724, 81054, 97694, 97464, 114270, 97436, 97422, 80990, 97502, 97372, 97358, 97326, 114868, 114866, 98676, 98674, 66292, 66290, 123098, 114842, 115130, 98618, 99194, 66170, 67322, 69310, 73404, 73374, 81592, 106334, 81564, 81550, 73310, 81630, 97968, 114524, 97944, 114510, 97932, 97926, 81500, 98012, 81486, 97998, 97880, 114478, 97868, 97862, 81454, 97902, 97836, 97830, 69470, 73564, 73550, 81752, 106414, 81740, 81734, 73518, 81774, 81708, 81702}, new int[]{109536, 120312, 86976, 109040, 120060, 86496, 108792, 119934, 86256, 108668, 86136, 129744, 89056, 110072, 129736, 88560, 109820, 129732, 88312, 109694, 129730, 88188, 128464, 129772, 89592, 128456, 129766, 89340, 128452, 89214, 128450, 125904, 128492, 125896, 128486, 125892, 125890, 120784, 125932, 120776, 125926, 120772, 120770, 110544, 120812, 110536, 120806, 110532, 84928, 108016, 119548, 84448, 107768, 119422, 84208, 107644, 84088, 107582, 84028, 129640, 85488, 108284, 129636, 85240, 108158, 129634, 85116, 85054, 128232, 129654, 85756, 128228, 85630, 128226, 125416, 128246, 125412, 125410, 119784, 125430, 119780, 119778, 108520, 119798, 108516, 108514, 83424, 107256, 119166, 83184, 107132, 83064, 107070, 83004, 82974, 129588, 83704, 107390, 129586, 83580, 83518, 128116, 83838, 128114, 125172, 125170, 119284, 119282, 107508, 107506, 82672, 106876, 82552, 106814, 82492, 82462, 129562, 82812, 82750, 128058, 125050, 119034, 82296, 106686, 82236, 82206, 82366, 82108, 82078, 76736, 103920, 117500, 76256, 103672, 117374, 76016, 103548, 75896, 103486, 75836, 129384, 77296, 104188, 129380, 77048, 104062, 129378, 76924, 76862, 127720, 129398, 77564, 127716, 77438, 127714, 124392, 127734, 124388, 124386, 117736, 124406, 117732, 117730, 104424, 117750, 104420, 104418, 112096, 121592, 126334, 92608, 111856, 121468, 92384, 111736, 121406, 92272, 111676, 92216, 111646, 92188, 75232, 103160, 117118, 93664, 74992, 103036, 93424, 112252, 102974, 93304, 74812, 93244, 74782, 93214, 129332, 75512, 103294, 129908, 129330, 93944, 75388, 129906, 93820, 75326, 93758, 127604, 75646, 128756, 127602, 94078, 128754, 124148, 126452, 124146, 126450, 117236, 121844, 117234, 121842, 103412, 103410, 91584, 111344, 121212, 91360, 111224, 121150, 91248, 111164, 91192, 111134, 91164, 91150, 74480, 102780, 91888, 74360, 102718, 91768, 111422, 91708, 74270, 91678, 129306, 74620, 129850, 92028, 74558, 91966, 127546, 128634, 124026, 126202, 116986, 121338, 102906, 90848, 110968, 121022, 90736, 110908, 90680, 110878, 90652, 90638, 74104, 102590, 91000, 74044, 90940, 74014, 90910, 74174, 91070, 90480, 110780, 90424, 110750, 90396, 90382, 73916, 90556, 73886, 90526, 90296, 110686, 90268, 90254, 73822, 90334, 90204, 90190, 71136, 101112, 116094, 70896, 100988, 70776, 100926, 70716, 70686, 129204, 71416, 101246, 129202, 71292, 71230, 127348, 71550, 127346, 123636, 123634, 116212, 116210, 101364, 101362, 79296, 105200, 118140, 79072, 105080, 118078, 78960, 105020, 78904, 104990, 78876, 78862, 70384, 100732, 79600, 70264, 100670, 79480, 105278, 79420, 70174, 79390, 129178, 70524, 129466, 79740, 70462, 79678, 127290, 127866, 123514, 124666, 115962, 118266, 100858, 113376, 122232, 126654, 95424, 113264, 122172, 95328, 113208, 122142, 95280, 113180, 95256, 113166, 95244, 78560, 104824, 117950, 95968, 78448, 104764, 95856, 113468, 104734, 95800, 78364, 95772, 78350, 95758, 70008, 100542, 78712, 69948, 96120, 78652, 69918, 96060, 78622, 96030, 70078, 78782, 96190, 94912, 113008, 122044, 94816, 112952, 122014, 94768, 112924, 94744, 112910, 94732, 94726, 78192, 104636, 95088, 78136, 104606, 95032, 113054, 95004, 78094, 94990, 69820, 78268, 69790, 95164, 78238, 95134, 94560, 112824, 121950, 94512, 112796, 94488, 112782, 94476, 94470, 78008, 104542, 94648, 77980, 94620, 77966, 94606, 69726, 78046, 94686, 94384, 112732, 94360, 112718, 94348, 94342, 77916, 94428, 77902, 94414, 94296, 112686, 94284, 94278, 77870, 94318, 94252, 94246, 68336, 99708, 68216, 99646, 68156, 68126, 68476, 68414, 127162, 123258, 115450, 99834, 72416, 101752, 116414, 72304, 101692, 72248, 101662, 72220, 72206, 67960, 99518, 72568, 67900, 72508, 67870, 72478, 68030, 72638, 80576, 105840, 118460, 80480, 105784, 118430, 80432, 105756, 80408, 105742, 80396, 80390, 72048, 101564, 80752, 71992, 101534, 80696, 71964, 80668, 71950, 80654, 67772, 72124, 67742, 80828, 72094, 80798, 114016, 122552, 126814, 96832, 113968, 122524, 96800, 113944, 122510, 96784, 113932, 96776, 113926, 96772, 80224, 105656, 118366, 97120, 80176, 105628, 97072, 114076, 105614, 97048, 80140, 97036, 80134, 97030, 71864, 101470, 80312, 71836, 97208, 80284, 71822, 97180, 80270, 97166, 67678, 71902, 80350, 97246, 96576, 113840, 122460, 96544, 113816, 122446, 96528, 113804, 96520, 113798, 96516, 96514, 80048, 105564, 96688, 80024, 105550, 96664, 113870, 96652, 80006, 96646, 71772, 80092, 71758, 96732, 80078, 96718, 96416, 113752, 122414, 96400, 113740, 96392, 113734, 96388, 96386, 79960, 105518, 96472, 79948, 96460, 79942, 96454, 71726, 79982, 96494, 96336, 113708, 96328, 113702, 96324, 96322, 79916, 96364, 79910, 96358, 96296, 113686, 96292, 96290, 79894, 96310, 66936, 99006, 66876, 66846, 67006, 68976, 100028, 68920, 99998, 68892, 68878, 66748, 69052, 66718, 69022, 73056, 102072, 116574, 73008, 102044, 72984, 102030, 72972, 72966, 68792, 99934, 73144, 68764, 73116, 68750, 73102, 66654, 68830, 73182, 81216, 106160, 118620, 81184, 106136, 118606, 81168, 106124, 81160, 106118, 81156, 81154, 72880, 101980, 81328, 72856, 101966, 81304, 106190, 81292, 72838, 81286, 68700, 72924, 68686, 81372, 72910, 81358, 114336, 122712, 126894, 114320, 122700, 114312, 122694, 114308, 114306, 81056, 106072, 118574, 97696, 81040, 106060, 97680, 114380, 106054, 97672, 81028, 97668, 81026, 97666, 72792, 101934, 81112, 72780, 97752, 81100, 72774, 97740, 81094, 97734, 68654, 72814, 81134, 97774, 114256, 122668, 114248, 122662, 114244, 114242, 80976, 106028, 97488, 80968, 106022, 97480, 114278, 97476, 80962, 97474, 72748, 81004, 72742, 97516, 80998, 97510, 114216, 122646, 114212, 114210, 80936, 106006, 97384, 80932, 97380, 80930, 97378, 72726, 80950, 97398, 114196, 114194, 80916, 97332, 80914, 97330, 66236, 66206, 67256, 99166, 67228, 67214, 66142, 67294, 69296, 100188, 69272, 100174, 69260, 69254, 67164, 69340, 67150, 69326, 73376, 102232, 116654, 73360, 102220, 73352, 102214, 73348, 73346, 69208, 100142, 73432, 102254, 73420, 69190, 73414, 67118, 69230, 73454, 106320, 118700, 106312, 118694, 106308, 106306, 73296, 102188, 81616, 106348, 102182, 81608, 73284, 81604, 73282, 81602, 69164, 73324, 69158, 81644, 73318, 81638, 122792, 126934, 122788, 122786, 106280, 118678, 114536, 106276, 114532, 106274, 114530, 73256, 102166, 81512, 73252, 98024, 81508, 73250, 98020, 81506, 98018, 69142, 73270, 81526, 98038, 122772, 122770, 106260, 114484, 106258, 114482, 73236, 81460, 73234, 97908, 81458, 97906, 122762, 106250, 114458, 73226, 81434, 97850, 66396, 66382, 67416, 99246, 67404, 67398, 66350, 67438, 69456, 100268, 69448, 100262, 69444, 69442, 67372, 69484, 67366, 69478, 102312, 116694, 102308, 102306, 69416, 100246, 73576, 102326, 73572, 69410, 73570, 67350, 69430, 73590, 118740, 118738, 102292, 106420, 102290, 106418, 69396, 73524, 69394, 81780, 73522, 81778, 118730, 102282, 106394, 69386, 73498, 81722, 66476, 66470, 67496, 99286, 67492, 67490, 66454, 67510, 100308, 100306, 67476, 69556, 67474, 69554, 116714}};

    /* renamed from: w  reason: collision with root package name */
    public static final g0 f19033w = new g0();

    public /* synthetic */ g0() {
    }

    public static void A(int i10, int i11, int i12, String str) {
        if (i10 < i11) {
            throw new IllegalArgumentException(String.format(Locale.US, "%s is out of range of [%d, %d] (too low)", new Object[]{str, Integer.valueOf(i11), Integer.valueOf(i12)}));
        } else if (i10 > i12) {
            throw new IllegalArgumentException(String.format(Locale.US, "%s is out of range of [%d, %d] (too high)", new Object[]{str, Integer.valueOf(i11), Integer.valueOf(i12)}));
        }
    }

    public static void B(int i10) {
        if (i10 < 0) {
            throw new IllegalArgumentException();
        }
    }

    public static void C(Object obj) {
        obj.getClass();
    }

    public static void D(Object obj, String str) {
        if (obj == null) {
            throw new NullPointerException(String.valueOf(str));
        }
    }

    public static void E(String str, boolean z10) {
        if (!z10) {
            throw new IllegalStateException(str);
        }
    }

    public static float F(float f10, float f11, float f12) {
        return f10 < f11 ? f11 : f10 > f12 ? f12 : f10;
    }

    public static int G(int i10, int i11, int i12) {
        return i10 < i11 ? i11 : i10 > i12 ? i12 : i10;
    }

    public static final int H(Comparable comparable, Comparable comparable2) {
        if (comparable == comparable2) {
            return 0;
        }
        if (comparable == null) {
            return -1;
        }
        if (comparable2 == null) {
            return 1;
        }
        return comparable.compareTo(comparable2);
    }

    public static final long I(long j10, zk.c cVar, zk.c cVar2) {
        j.f(cVar, "sourceUnit");
        j.f(cVar2, "targetUnit");
        return cVar2.f23795a.convert(j10, cVar.f23795a);
    }

    public static final void J(int i10, int i11) {
        if (i10 > i11) {
            throw new IndexOutOfBoundsException("toIndex (" + i10 + ") is greater than size (" + i11 + ").");
        }
    }

    public static final ik.d K(Object obj, ik.d dVar, p pVar) {
        j.f(pVar, "<this>");
        j.f(dVar, "completion");
        if (pVar instanceof kk.a) {
            return ((kk.a) pVar).create(obj, dVar);
        }
        ik.f context = dVar.getContext();
        if (context == ik.g.f20653a) {
            return new jk.b(obj, dVar, pVar);
        }
        return new jk.c(dVar, context, pVar, obj);
    }

    public static void L(kj.a aVar, int i10, Bitmap.CompressFormat compressFormat, int i11, int i12) {
        int i13;
        if ((i12 & 1) != 0) {
            i10 = 612;
        }
        if ((i12 & 2) != 0) {
            i13 = 816;
        } else {
            i13 = 0;
        }
        if ((i12 & 4) != 0) {
            compressFormat = Bitmap.CompressFormat.JPEG;
        }
        if ((i12 & 8) != 0) {
            i11 = 80;
        }
        j.g(aVar, "$this$default");
        j.g(compressFormat, "format");
        aVar.f20831a.add(new kj.c(i10, i13, compressFormat, i11));
    }

    /* JADX WARNING: Code restructure failed: missing block: B:39:0x0091, code lost:
        r10 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:40:0x0092, code lost:
        if (r9 != false) goto L_0x0094;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:42:0x0096, code lost:
        if ((r7 instanceof java.util.concurrent.CancellationException) != false) goto L_0x0098;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:43:0x0098, code lost:
        r5 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:44:0x009b, code lost:
        if (r5 == null) goto L_0x009d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:45:0x009d, code lost:
        r5 = new java.util.concurrent.CancellationException("Channel was consumed, consumer had failed");
        r5.initCause(r7);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x00a7, code lost:
        r8.cancel(r5);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:47:0x00aa, code lost:
        throw r10;
     */
    /* JADX WARNING: Removed duplicated region for block: B:19:0x0049  */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x0064 A[Catch:{ all -> 0x0091 }, RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x0065 A[Catch:{ all -> 0x0091 }] */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x0071 A[Catch:{ all -> 0x0091 }] */
    /* JADX WARNING: Removed duplicated region for block: B:34:0x008a  */
    /* JADX WARNING: Removed duplicated region for block: B:8:0x0023  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static final java.lang.Object M(dl.f r7, cl.o r8, boolean r9, ik.d r10) {
        /*
            boolean r0 = r10 instanceof dl.g
            if (r0 == 0) goto L_0x0013
            r0 = r10
            dl.g r0 = (dl.g) r0
            int r1 = r0.f19981f
            r2 = -2147483648(0xffffffff80000000, float:-0.0)
            r3 = r1 & r2
            if (r3 == 0) goto L_0x0013
            int r1 = r1 - r2
            r0.f19981f = r1
            goto L_0x0018
        L_0x0013:
            dl.g r0 = new dl.g
            r0.<init>(r10)
        L_0x0018:
            java.lang.Object r10 = r0.f19980e
            jk.a r1 = jk.a.COROUTINE_SUSPENDED
            int r2 = r0.f19981f
            r3 = 1
            r4 = 2
            r5 = 0
            if (r2 == 0) goto L_0x0049
            if (r2 == r3) goto L_0x003d
            if (r2 != r4) goto L_0x0035
            boolean r9 = r0.f19979d
            cl.g r7 = r0.f19978c
            cl.r r8 = r0.f19977b
            dl.f r2 = r0.f19976a
            p3.l0.Q0(r10)     // Catch:{ all -> 0x0086 }
        L_0x0032:
            r10 = r7
            r7 = r2
            goto L_0x0054
        L_0x0035:
            java.lang.IllegalStateException r7 = new java.lang.IllegalStateException
            java.lang.String r8 = "call to 'resume' before 'invoke' with coroutine"
            r7.<init>(r8)
            throw r7
        L_0x003d:
            boolean r9 = r0.f19979d
            cl.g r7 = r0.f19978c
            cl.r r8 = r0.f19977b
            dl.f r2 = r0.f19976a
            p3.l0.Q0(r10)     // Catch:{ all -> 0x0086 }
            goto L_0x0069
        L_0x0049:
            p3.l0.Q0(r10)
            boolean r10 = r7 instanceof dl.d0
            if (r10 != 0) goto L_0x00ab
            cl.g r10 = r8.iterator()     // Catch:{ all -> 0x0086 }
        L_0x0054:
            r0.f19976a = r7     // Catch:{ all -> 0x0086 }
            r0.f19977b = r8     // Catch:{ all -> 0x0086 }
            r0.f19978c = r10     // Catch:{ all -> 0x0086 }
            r0.f19979d = r9     // Catch:{ all -> 0x0086 }
            r0.f19981f = r3     // Catch:{ all -> 0x0086 }
            java.lang.Object r2 = r10.a(r0)     // Catch:{ all -> 0x0086 }
            if (r2 != r1) goto L_0x0065
            return r1
        L_0x0065:
            r6 = r2
            r2 = r7
            r7 = r10
            r10 = r6
        L_0x0069:
            java.lang.Boolean r10 = (java.lang.Boolean) r10     // Catch:{ all -> 0x0086 }
            boolean r10 = r10.booleanValue()     // Catch:{ all -> 0x0086 }
            if (r10 == 0) goto L_0x0088
            java.lang.Object r10 = r7.next()     // Catch:{ all -> 0x0086 }
            r0.f19976a = r2     // Catch:{ all -> 0x0086 }
            r0.f19977b = r8     // Catch:{ all -> 0x0086 }
            r0.f19978c = r7     // Catch:{ all -> 0x0086 }
            r0.f19979d = r9     // Catch:{ all -> 0x0086 }
            r0.f19981f = r4     // Catch:{ all -> 0x0086 }
            java.lang.Object r10 = r2.e(r10, r0)     // Catch:{ all -> 0x0086 }
            if (r10 != r1) goto L_0x0032
            return r1
        L_0x0086:
            r7 = move-exception
            goto L_0x0090
        L_0x0088:
            if (r9 == 0) goto L_0x008d
            r8.cancel(r5)
        L_0x008d:
            ek.i r7 = ek.i.f20112a
            return r7
        L_0x0090:
            throw r7     // Catch:{ all -> 0x0091 }
        L_0x0091:
            r10 = move-exception
            if (r9 == 0) goto L_0x00aa
            boolean r9 = r7 instanceof java.util.concurrent.CancellationException
            if (r9 == 0) goto L_0x009b
            r5 = r7
            java.util.concurrent.CancellationException r5 = (java.util.concurrent.CancellationException) r5
        L_0x009b:
            if (r5 != 0) goto L_0x00a7
            java.util.concurrent.CancellationException r5 = new java.util.concurrent.CancellationException
            java.lang.String r9 = "Channel was consumed, consumer had failed"
            r5.<init>(r9)
            r5.initCause(r7)
        L_0x00a7:
            r8.cancel(r5)
        L_0x00aa:
            throw r10
        L_0x00ab:
            dl.d0 r7 = (dl.d0) r7
            r7.getClass()
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: al.g0.M(dl.f, cl.o, boolean, ik.d):java.lang.Object");
    }

    public static void N(int i10, int i11, e eVar) {
        int i12;
        int i13;
        int i14 = 1 << (i11 - 1);
        if ((i10 & i14) != 0) {
            i12 = 1;
        } else {
            i12 = 0;
        }
        int i15 = 0;
        for (int i16 = 0; i16 < i11; i16++) {
            if ((i10 & i14) != 0) {
                i13 = 1;
            } else {
                i13 = 0;
            }
            if (i12 == i13) {
                i15++;
            } else {
                for (int i17 = 0; i17 < i15; i17++) {
                    int i18 = eVar.f47c;
                    eVar.f47c = i18 + 1;
                    ((byte[]) eVar.f46b)[i18] = (byte) i12;
                }
                eVar.getClass();
                i15 = 1;
                i12 = i13;
            }
            i14 >>= 1;
        }
        for (int i19 = 0; i19 < i15; i19++) {
            int i20 = eVar.f47c;
            eVar.f47c = i20 + 1;
            ((byte[]) eVar.f46b)[i20] = (byte) i12;
        }
        eVar.getClass();
    }

    public static final void O(ik.f fVar) {
        i1 i1Var = (i1) fVar.get(i1.b.f19045a);
        if (i1Var != null && !i1Var.isActive()) {
            throw i1Var.getCancellationException();
        }
    }

    public static void P(Bundle bundle, String str) {
        if (!bundle.containsKey(str)) {
            throw new IllegalArgumentException(b0.r("Bundle must contain ", str));
        }
    }

    public static final x3.l Q(s sVar) {
        j.f(sVar, "<this>");
        return new x3.l(sVar.f17019a, sVar.f17038t);
    }

    public static final int R(Cursor cursor, String str) {
        String str2;
        boolean z10;
        j.f(cursor, "c");
        int columnIndex = cursor.getColumnIndex(str);
        if (columnIndex < 0) {
            columnIndex = cursor.getColumnIndex('`' + str + '`');
            if (columnIndex < 0) {
                if (Build.VERSION.SDK_INT <= 25) {
                    if (str.length() == 0) {
                        z10 = true;
                    } else {
                        z10 = false;
                    }
                    if (!z10) {
                        String[] columnNames = cursor.getColumnNames();
                        j.e(columnNames, "columnNames");
                        String str3 = '.' + str;
                        String str4 = '.' + str + '`';
                        int length = columnNames.length;
                        int i10 = 0;
                        int i11 = 0;
                        while (true) {
                            if (i10 >= length) {
                                break;
                            }
                            String str5 = columnNames[i10];
                            int i12 = i11 + 1;
                            if (str5.length() < str.length() + 2 || (!h.F0(str5, str3) && (str5.charAt(0) != '`' || !h.F0(str5, str4)))) {
                                i10++;
                                i11 = i12;
                            }
                        }
                        columnIndex = i11;
                    }
                }
                columnIndex = -1;
            }
        }
        if (columnIndex >= 0) {
            return columnIndex;
        }
        try {
            String[] columnNames2 = cursor.getColumnNames();
            j.e(columnNames2, "c.columnNames");
            str2 = fk.h.t0(columnNames2, (String) null, (String) null, (String) null, 63);
        } catch (Exception unused) {
            str2 = "unknown";
        }
        throw new IllegalArgumentException("column '" + str + "' does not exist. Available columns: " + str2);
    }

    public static int S(Context context, int i10) {
        return (int) TypedValue.applyDimension(1, (float) i10, context.getResources().getDisplayMetrics());
    }

    public static final String T(Object obj) {
        return Integer.toHexString(System.identityHashCode(obj));
    }

    public static int U(byte[] bArr, byte[] bArr2) {
        int i10;
        if (bArr2.length != 0) {
            int i11 = 0;
            for (int i12 = 0; i12 < bArr2.length; i12++) {
                int i13 = bArr2[i12] - 1;
                if (((1 << (5 - (i13 % 6))) & bArr[i13 / 6]) == 0) {
                    i10 = 0;
                } else {
                    i10 = 1;
                }
                i11 += i10 << ((bArr2.length - i12) - 1);
            }
            return i11;
        }
        throw new IllegalArgumentException();
    }

    public static final Class V(wk.b bVar) {
        j.f(bVar, "<this>");
        Class<?> a10 = ((sk.c) bVar).a();
        if (!a10.isPrimitive()) {
            return a10;
        }
        String name = a10.getName();
        switch (name.hashCode()) {
            case -1325958191:
                if (!name.equals("double")) {
                    return a10;
                }
                return Double.class;
            case 104431:
                if (!name.equals("int")) {
                    return a10;
                }
                return Integer.class;
            case 3039496:
                if (!name.equals("byte")) {
                    return a10;
                }
                return Byte.class;
            case 3052374:
                if (!name.equals("char")) {
                    return a10;
                }
                return Character.class;
            case 3327612:
                if (!name.equals("long")) {
                    return a10;
                }
                return Long.class;
            case 3625364:
                if (!name.equals("void")) {
                    return a10;
                }
                return Void.class;
            case 64711720:
                if (!name.equals("boolean")) {
                    return a10;
                }
                return Boolean.class;
            case 97526364:
                if (!name.equals("float")) {
                    return a10;
                }
                return Float.class;
            case 109413500:
                if (!name.equals("short")) {
                    return a10;
                }
                return Short.class;
            default:
                return a10;
        }
    }

    public static final androidx.lifecycle.l W(r2.l lVar) {
        androidx.lifecycle.l lVar2;
        j.f(lVar, "<this>");
        o B = lVar.B();
        j.f(B, "<this>");
        while (true) {
            lVar2 = (androidx.lifecycle.l) B.f2766a.get();
            if (lVar2 == null) {
                boolean z10 = true;
                y1 y1Var = new y1((i1) null);
                gl.c cVar = r0.f19084a;
                lVar2 = new androidx.lifecycle.l(B, y1Var.plus((ik.f) m.f20254a.a0()));
                AtomicReference<Object> atomicReference = B.f2766a;
                while (true) {
                    if (!atomicReference.compareAndSet((Object) null, lVar2)) {
                        if (atomicReference.get() != null) {
                            z10 = false;
                            continue;
                            break;
                        }
                    } else {
                        break;
                    }
                }
                if (z10) {
                    gl.c cVar2 = r0.f19084a;
                    l0.j0(lVar2, m.f20254a.a0(), new k(lVar2, (ik.d<? super k>) null), 2);
                    break;
                }
            } else {
                break;
            }
        }
        return lVar2;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0056, code lost:
        r6 = r4;
        r4 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x0060, code lost:
        r7 = r5 - 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0062, code lost:
        if (r5 != 0) goto L_0x0065;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x0064, code lost:
        r4 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:17:0x0065, code lost:
        r3 = r3 + 1;
        r5 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x0051, code lost:
        r5 = -1;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static java.lang.String X(byte[] r12, int r13, int r14) {
        /*
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r1 = -1
            r2 = 0
            r3 = r13
            r5 = r1
            r4 = r2
            r6 = r4
        L_0x000b:
            int r7 = r13 + r14
            r8 = 1
            if (r3 >= r7) goto L_0x0068
            java.lang.String[] r7 = f19026p
            r7 = r7[r4]
            byte r9 = r12[r3]
            char r7 = r7.charAt(r9)
            switch(r7) {
                case 65520: goto L_0x0059;
                case 65521: goto L_0x0059;
                case 65522: goto L_0x0059;
                case 65523: goto L_0x0059;
                case 65524: goto L_0x0059;
                case 65525: goto L_0x0055;
                case 65526: goto L_0x0053;
                case 65527: goto L_0x0050;
                case 65528: goto L_0x004d;
                case 65529: goto L_0x0051;
                case 65530: goto L_0x001d;
                case 65531: goto L_0x0021;
                default: goto L_0x001d;
            }
        L_0x001d:
            r0.append(r7)
            goto L_0x0060
        L_0x0021:
            int r3 = r3 + 1
            byte r7 = r12[r3]
            int r7 = r7 << 24
            int r3 = r3 + r8
            byte r9 = r12[r3]
            int r9 = r9 << 18
            int r7 = r7 + r9
            int r3 = r3 + r8
            byte r9 = r12[r3]
            int r9 = r9 << 12
            int r7 = r7 + r9
            int r3 = r3 + r8
            byte r9 = r12[r3]
            int r9 = r9 << 6
            int r7 = r7 + r9
            int r3 = r3 + r8
            byte r9 = r12[r3]
            int r7 = r7 + r9
            java.text.DecimalFormat r9 = new java.text.DecimalFormat
            java.lang.String r10 = "000000000"
            r9.<init>(r10)
            long r10 = (long) r7
            java.lang.String r7 = r9.format(r10)
            r0.append(r7)
            goto L_0x0060
        L_0x004d:
            r5 = r1
            r4 = r8
            goto L_0x0060
        L_0x0050:
            r4 = r2
        L_0x0051:
            r5 = r1
            goto L_0x0060
        L_0x0053:
            r5 = 3
            goto L_0x0056
        L_0x0055:
            r5 = 2
        L_0x0056:
            r6 = r4
            r4 = r2
            goto L_0x0060
        L_0x0059:
            r5 = 65520(0xfff0, float:9.1813E-41)
            int r7 = r7 - r5
            r6 = r4
            r4 = r7
            r5 = r8
        L_0x0060:
            int r7 = r5 + -1
            if (r5 != 0) goto L_0x0065
            r4 = r6
        L_0x0065:
            int r3 = r3 + r8
            r5 = r7
            goto L_0x000b
        L_0x0068:
            int r12 = r0.length()
            if (r12 <= 0) goto L_0x0085
            int r12 = r0.length()
            int r12 = r12 - r8
            char r12 = r0.charAt(r12)
            r13 = 65532(0xfffc, float:9.183E-41)
            if (r12 != r13) goto L_0x0085
            int r12 = r0.length()
            int r12 = r12 - r8
            r0.setLength(r12)
            goto L_0x0068
        L_0x0085:
            java.lang.String r12 = r0.toString()
            return r12
        */
        throw new UnsupportedOperationException("Method not decompiled: al.g0.X(byte[], int, int):java.lang.String");
    }

    public static final l Y(ik.d dVar) {
        l lVar;
        l lVar2;
        boolean z10;
        boolean z11 = true;
        if (!(dVar instanceof fl.f)) {
            return new l(1, dVar);
        }
        fl.f fVar = (fl.f) dVar;
        AtomicReferenceFieldUpdater atomicReferenceFieldUpdater = fl.f.f20227o;
        while (true) {
            Object obj = atomicReferenceFieldUpdater.get(fVar);
            lVar = null;
            if (obj == null) {
                fl.f.f20227o.set(fVar, f19023f);
                lVar2 = null;
                break;
            } else if (obj instanceof l) {
                AtomicReferenceFieldUpdater atomicReferenceFieldUpdater2 = fl.f.f20227o;
                u9.b bVar = f19023f;
                while (true) {
                    if (!atomicReferenceFieldUpdater2.compareAndSet(fVar, obj, bVar)) {
                        if (atomicReferenceFieldUpdater2.get(fVar) != obj) {
                            z10 = false;
                            break;
                        }
                    } else {
                        z10 = true;
                        break;
                    }
                }
                if (z10) {
                    lVar2 = (l) obj;
                    break;
                }
            } else if (obj != f19023f && !(obj instanceof Throwable)) {
                throw new IllegalStateException(("Inconsistent state " + obj).toString());
            }
        }
        if (lVar2 != null) {
            AtomicReferenceFieldUpdater atomicReferenceFieldUpdater3 = l.f19048n;
            Object obj2 = atomicReferenceFieldUpdater3.get(lVar2);
            if (!(obj2 instanceof t) || ((t) obj2).f19091d == null) {
                l.f19047f.set(lVar2, 536870911);
                atomicReferenceFieldUpdater3.set(lVar2, b.f18991a);
            } else {
                lVar2.p();
                z11 = false;
            }
            if (z11) {
                lVar = lVar2;
            }
            if (lVar != null) {
                return lVar;
            }
        }
        return new l(2, dVar);
    }

    public static int Z(Context context, int i10) {
        return (int) TypedValue.applyDimension(1, (float) i10, context.getResources().getDisplayMetrics());
    }

    public static final int a0(int i10, int i11, int i12) {
        if (i12 > 0) {
            if (i10 >= i11) {
                return i11;
            }
            int i13 = i11 % i12;
            if (i13 < 0) {
                i13 += i12;
            }
            int i14 = i10 % i12;
            if (i14 < 0) {
                i14 += i12;
            }
            int i15 = (i13 - i14) % i12;
            if (i15 < 0) {
                i15 += i12;
            }
            return i11 - i15;
        } else if (i12 >= 0) {
            throw new IllegalArgumentException("Step is zero.");
        } else if (i10 <= i11) {
            return i11;
        } else {
            int i16 = -i12;
            int i17 = i10 % i16;
            if (i17 < 0) {
                i17 += i16;
            }
            int i18 = i11 % i16;
            if (i18 < 0) {
                i18 += i16;
            }
            int i19 = (i17 - i18) % i16;
            if (i19 < 0) {
                i19 += i16;
            }
            return i11 + i19;
        }
    }

    public static final ik.d b0(ik.d dVar) {
        kk.c cVar;
        ik.d<Object> intercepted;
        j.f(dVar, "<this>");
        if (dVar instanceof kk.c) {
            cVar = (kk.c) dVar;
        } else {
            cVar = null;
        }
        if (cVar == null || (intercepted = cVar.intercepted()) == null) {
            return dVar;
        }
        return intercepted;
    }

    public static boolean c0(Uri uri) {
        if (uri == null || !"content".equals(uri.getScheme()) || !"media".equals(uri.getAuthority())) {
            return false;
        }
        return true;
    }

    public static final int d0(int i10) {
        if (i10 < 0) {
            return i10;
        }
        if (i10 < 3) {
            return i10 + 1;
        }
        if (i10 < 1073741824) {
            return (int) ((((float) i10) / 0.75f) + 1.0f);
        }
        return Integer.MAX_VALUE;
    }

    public static final Map e0(ek.e eVar) {
        j.f(eVar, "pair");
        Map singletonMap = Collections.singletonMap(eVar.f20102a, eVar.f20103b);
        j.e(singletonMap, "singletonMap(pair.first, pair.second)");
        return singletonMap;
    }

    public static final void f0(p0 p0Var, ik.d dVar, boolean z10) {
        Object obj;
        d2<?> d2Var;
        Object h10 = p0Var.h();
        Throwable d10 = p0Var.d(h10);
        if (d10 != null) {
            obj = l0.A(d10);
        } else {
            obj = p0Var.e(h10);
        }
        if (z10) {
            j.d(dVar, "null cannot be cast to non-null type kotlinx.coroutines.internal.DispatchedContinuation<T of kotlinx.coroutines.DispatchedTaskKt.resume>");
            fl.f fVar = (fl.f) dVar;
            ik.d<T> dVar2 = fVar.f20229e;
            Object obj2 = fVar.f20231n;
            ik.f context = dVar2.getContext();
            Object b10 = v.b(context, obj2);
            if (b10 != v.f20264a) {
                d2Var = y.c(dVar2, context, b10);
            } else {
                d2Var = null;
            }
            try {
                fVar.f20229e.resumeWith(obj);
                i iVar = i.f20112a;
            } finally {
                if (d2Var == null || d2Var.l0()) {
                    v.a(context, b10);
                }
            }
        } else {
            dVar.resumeWith(obj);
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:33:0x009b, code lost:
        if (r0.l0() != false) goto L_0x009d;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static final void g0(ik.d r6, java.lang.Object r7, rk.l r8) {
        /*
            boolean r0 = r6 instanceof fl.f
            if (r0 == 0) goto L_0x00c1
            fl.f r6 = (fl.f) r6
            java.lang.Throwable r0 = ek.f.a(r7)
            r1 = 0
            if (r0 != 0) goto L_0x0017
            if (r8 == 0) goto L_0x0015
            al.v r0 = new al.v
            r0.<init>(r7, r8)
            goto L_0x001d
        L_0x0015:
            r0 = r7
            goto L_0x001d
        L_0x0017:
            al.u r8 = new al.u
            r8.<init>(r0, r1)
            r0 = r8
        L_0x001d:
            al.a0 r8 = r6.f20228d
            ik.f r2 = r6.getContext()
            boolean r8 = r8.W(r2)
            r2 = 1
            if (r8 == 0) goto L_0x0039
            r6.f20230f = r0
            r6.f19082c = r2
            al.a0 r7 = r6.f20228d
            ik.f r8 = r6.getContext()
            r7.s(r8, r6)
            goto L_0x00c4
        L_0x0039:
            al.x0 r8 = al.a2.a()
            boolean r3 = r8.e0()
            if (r3 == 0) goto L_0x004c
            r6.f20230f = r0
            r6.f19082c = r2
            r8.c0(r6)
            goto L_0x00c4
        L_0x004c:
            r8.d0(r2)
            r3 = 0
            ik.f r4 = r6.getContext()     // Catch:{ all -> 0x0074 }
            al.i1$b r5 = al.i1.b.f19045a     // Catch:{ all -> 0x0074 }
            ik.f$b r4 = r4.get(r5)     // Catch:{ all -> 0x0074 }
            al.i1 r4 = (al.i1) r4     // Catch:{ all -> 0x0074 }
            if (r4 == 0) goto L_0x0076
            boolean r5 = r4.isActive()     // Catch:{ all -> 0x0074 }
            if (r5 != 0) goto L_0x0076
            java.util.concurrent.CancellationException r1 = r4.getCancellationException()     // Catch:{ all -> 0x0074 }
            r6.a(r0, r1)     // Catch:{ all -> 0x0074 }
            ek.f$a r0 = p3.l0.A(r1)     // Catch:{ all -> 0x0074 }
            r6.resumeWith(r0)     // Catch:{ all -> 0x0074 }
            r1 = r2
            goto L_0x0076
        L_0x0074:
            r7 = move-exception
            goto L_0x00b5
        L_0x0076:
            if (r1 != 0) goto L_0x00ae
            ik.d<T> r0 = r6.f20229e     // Catch:{ all -> 0x0074 }
            java.lang.Object r1 = r6.f20231n     // Catch:{ all -> 0x0074 }
            ik.f r4 = r0.getContext()     // Catch:{ all -> 0x0074 }
            java.lang.Object r1 = fl.v.b(r4, r1)     // Catch:{ all -> 0x0074 }
            u9.b r5 = fl.v.f20264a     // Catch:{ all -> 0x0074 }
            if (r1 == r5) goto L_0x008d
            al.d2 r0 = al.y.c(r0, r4, r1)     // Catch:{ all -> 0x0074 }
            goto L_0x008e
        L_0x008d:
            r0 = r3
        L_0x008e:
            ik.d<T> r5 = r6.f20229e     // Catch:{ all -> 0x00a1 }
            r5.resumeWith(r7)     // Catch:{ all -> 0x00a1 }
            ek.i r7 = ek.i.f20112a     // Catch:{ all -> 0x00a1 }
            if (r0 == 0) goto L_0x009d
            boolean r7 = r0.l0()     // Catch:{ all -> 0x0074 }
            if (r7 == 0) goto L_0x00ae
        L_0x009d:
            fl.v.a(r4, r1)     // Catch:{ all -> 0x0074 }
            goto L_0x00ae
        L_0x00a1:
            r7 = move-exception
            if (r0 == 0) goto L_0x00aa
            boolean r0 = r0.l0()     // Catch:{ all -> 0x0074 }
            if (r0 == 0) goto L_0x00ad
        L_0x00aa:
            fl.v.a(r4, r1)     // Catch:{ all -> 0x0074 }
        L_0x00ad:
            throw r7     // Catch:{ all -> 0x0074 }
        L_0x00ae:
            boolean r7 = r8.j0()     // Catch:{ all -> 0x0074 }
            if (r7 != 0) goto L_0x00ae
            goto L_0x00b8
        L_0x00b5:
            r6.g(r7, r3)     // Catch:{ all -> 0x00bc }
        L_0x00b8:
            r8.a0(r2)
            goto L_0x00c4
        L_0x00bc:
            r6 = move-exception
            r8.a0(r2)
            throw r6
        L_0x00c1:
            r6.resumeWith(r7)
        L_0x00c4:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: al.g0.g0(ik.d, java.lang.Object, rk.l):void");
    }

    public static final int h0(double d10) {
        if (Double.isNaN(d10)) {
            throw new IllegalArgumentException("Cannot round NaN value.");
        } else if (d10 > 2.147483647E9d) {
            return Integer.MAX_VALUE;
        } else {
            if (d10 < -2.147483648E9d) {
                return Integer.MIN_VALUE;
            }
            return (int) Math.round(d10);
        }
    }

    public static final int i0(float f10) {
        if (!Float.isNaN(f10)) {
            return Math.round(f10);
        }
        throw new IllegalArgumentException("Cannot round NaN value.");
    }

    public static final String j0(ik.d dVar) {
        String str;
        if (dVar instanceof fl.f) {
            return dVar.toString();
        }
        try {
            str = dVar + '@' + T(dVar);
        } catch (Throwable th2) {
            str = l0.A(th2);
        }
        Throwable a10 = ek.f.a(str);
        String str2 = str;
        if (a10 != null) {
            str2 = dVar.getClass().getName() + '@' + T(dVar);
        }
        return (String) str2;
    }

    public static final Map k0(LinkedHashMap linkedHashMap) {
        j.f(linkedHashMap, "<this>");
        Map.Entry entry = (Map.Entry) linkedHashMap.entrySet().iterator().next();
        Map singletonMap = Collections.singletonMap(entry.getKey(), entry.getValue());
        j.e(singletonMap, "with(entries.iterator().…ingletonMap(key, value) }");
        return singletonMap;
    }

    public static final ExecutorService r(boolean z10) {
        ExecutorService newFixedThreadPool = Executors.newFixedThreadPool(Math.max(2, Math.min(Runtime.getRuntime().availableProcessors() - 1, 4)), new o3.b(z10));
        j.e(newFixedThreadPool, "newFixedThreadPool(\n    …)),\n        factory\n    )");
        return newFixedThreadPool;
    }

    public static final void s(Throwable th2, Throwable th3) {
        j.f(th2, "<this>");
        j.f(th3, "exception");
        if (th2 != th3) {
            mk.b.f21570a.a(th2, th3);
        }
    }

    public static final void t(StringBuilder sb2, Object obj, rk.l lVar) {
        boolean z10;
        if (lVar != null) {
            sb2.append((CharSequence) lVar.invoke(obj));
            return;
        }
        if (obj == null) {
            z10 = true;
        } else {
            z10 = obj instanceof CharSequence;
        }
        if (z10) {
            sb2.append((CharSequence) obj);
        } else if (obj instanceof Character) {
            sb2.append(((Character) obj).charValue());
        } else {
            sb2.append(String.valueOf(obj));
        }
    }

    public static boolean u(Bundle bundle, Bundle bundle2) {
        if (bundle == bundle2) {
            return true;
        }
        if (bundle == null) {
            if (bundle2.getInt("android.media.browse.extra.PAGE", -1) == -1 && bundle2.getInt("android.media.browse.extra.PAGE_SIZE", -1) == -1) {
                return true;
            }
            return false;
        } else if (bundle2 == null) {
            if (bundle.getInt("android.media.browse.extra.PAGE", -1) == -1 && bundle.getInt("android.media.browse.extra.PAGE_SIZE", -1) == -1) {
                return true;
            }
            return false;
        } else if (bundle.getInt("android.media.browse.extra.PAGE", -1) == bundle2.getInt("android.media.browse.extra.PAGE", -1) && bundle.getInt("android.media.browse.extra.PAGE_SIZE", -1) == bundle2.getInt("android.media.browse.extra.PAGE_SIZE", -1)) {
            return true;
        } else {
            return false;
        }
    }

    public static final gk.f v(gk.f fVar) {
        gk.b<E, ?> bVar = fVar.f20459a;
        bVar.c();
        bVar.f20449s = true;
        if (bVar.f20445o <= 0) {
            j.d(gk.b.f20437t, "null cannot be cast to non-null type kotlin.collections.Map<K of kotlin.collections.builders.MapBuilder, V of kotlin.collections.builders.MapBuilder>");
        }
        if (fVar.f20459a.f20445o > 0) {
            return fVar;
        }
        return gk.f.f20458b;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:4:0x0016, code lost:
        r0 = r2.getClass().getName();
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static void w(r2.l r2, java.lang.StringBuilder r3) {
        /*
            if (r2 != 0) goto L_0x0008
            java.lang.String r2 = "null"
            r3.append(r2)
            goto L_0x003f
        L_0x0008:
            java.lang.Class r0 = r2.getClass()
            java.lang.String r0 = r0.getSimpleName()
            int r1 = r0.length()
            if (r1 > 0) goto L_0x002c
            java.lang.Class r0 = r2.getClass()
            java.lang.String r0 = r0.getName()
            r1 = 46
            int r1 = r0.lastIndexOf(r1)
            if (r1 <= 0) goto L_0x002c
            int r1 = r1 + 1
            java.lang.String r0 = r0.substring(r1)
        L_0x002c:
            r3.append(r0)
            r0 = 123(0x7b, float:1.72E-43)
            r3.append(r0)
            int r2 = java.lang.System.identityHashCode(r2)
            java.lang.String r2 = java.lang.Integer.toHexString(r2)
            r3.append(r2)
        L_0x003f:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: al.g0.w(r2.l, java.lang.StringBuilder):void");
    }

    public static final void x(ik.f fVar, CancellationException cancellationException) {
        int i10 = i1.f19044g;
        i1 i1Var = (i1) fVar.get(i1.b.f19045a);
        if (i1Var != null) {
            i1Var.cancel(cancellationException);
        }
    }

    public static void y(String str, boolean z10) {
        if (!z10) {
            throw new IllegalArgumentException(String.valueOf(str));
        }
    }

    public static void z(boolean z10) {
        if (!z10) {
            throw new IllegalArgumentException();
        }
    }

    public void a(boolean z10) {
    }

    public Object b(m4.c cVar, float f10) {
        double d10;
        boolean z10 = true;
        if (cVar.K() != 1) {
            z10 = false;
        }
        if (z10) {
            cVar.d();
        }
        double z11 = cVar.z();
        double z12 = cVar.z();
        double z13 = cVar.z();
        if (cVar.K() == 7) {
            d10 = cVar.z();
        } else {
            d10 = 1.0d;
        }
        if (z10) {
            cVar.i();
        }
        if (z11 <= 1.0d && z12 <= 1.0d && z13 <= 1.0d) {
            z11 *= 255.0d;
            z12 *= 255.0d;
            z13 *= 255.0d;
            if (d10 <= 1.0d) {
                d10 *= 255.0d;
            }
        }
        return Integer.valueOf(Color.argb((int) d10, (int) z11, (int) z12, (int) z13));
    }

    /* JADX WARNING: Code restructure failed: missing block: B:294:0x0508, code lost:
        if (r7 != false) goto L_0x050a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:45:0x007a, code lost:
        r4 = r1;
     */
    /* JADX WARNING: Removed duplicated region for block: B:110:0x0168  */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x01be  */
    /* JADX WARNING: Removed duplicated region for block: B:299:0x0513  */
    /* JADX WARNING: Removed duplicated region for block: B:389:0x00e6 A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x0097  */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x00d7 A[LOOP:2: B:57:0x00a9->B:71:0x00d7, LOOP_END] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public cd.b e(java.lang.String r25, uc.a r26) {
        /*
            r24 = this;
            r0 = r25
            boolean r1 = r25.isEmpty()
            if (r1 != 0) goto L_0x06d2
            uc.a r1 = uc.a.QR_CODE
            r2 = r26
            if (r2 != r1) goto L_0x06c2
            ud.f r1 = ud.f.BYTE
            java.lang.String r2 = "ISO-8859-1"
            java.lang.String r3 = "Shift_JIS"
            boolean r4 = r3.equals(r2)
            r5 = 96
            r6 = -1
            r8 = 1
            if (r4 == 0) goto L_0x004b
            byte[] r4 = r0.getBytes(r3)     // Catch:{ UnsupportedEncodingException -> 0x0045 }
            int r9 = r4.length
            int r10 = r9 % 2
            if (r10 == 0) goto L_0x0028
            goto L_0x0045
        L_0x0028:
            r10 = 0
        L_0x0029:
            if (r10 >= r9) goto L_0x0043
            byte r11 = r4[r10]
            r11 = r11 & 255(0xff, float:3.57E-43)
            r12 = 129(0x81, float:1.81E-43)
            if (r11 < r12) goto L_0x0037
            r12 = 159(0x9f, float:2.23E-43)
            if (r11 <= r12) goto L_0x0040
        L_0x0037:
            r12 = 224(0xe0, float:3.14E-43)
            if (r11 < r12) goto L_0x0045
            r12 = 235(0xeb, float:3.3E-43)
            if (r11 <= r12) goto L_0x0040
            goto L_0x0045
        L_0x0040:
            int r10 = r10 + 2
            goto L_0x0029
        L_0x0043:
            r4 = r8
            goto L_0x0046
        L_0x0045:
            r4 = 0
        L_0x0046:
            if (r4 == 0) goto L_0x004b
            ud.f r4 = ud.f.KANJI
            goto L_0x007b
        L_0x004b:
            r4 = 0
            r9 = 0
            r10 = 0
        L_0x004e:
            int r11 = r25.length()
            if (r4 >= r11) goto L_0x0070
            char r11 = r0.charAt(r4)
            r12 = 48
            if (r11 < r12) goto L_0x0062
            r12 = 57
            if (r11 > r12) goto L_0x0062
            r10 = r8
            goto L_0x006d
        L_0x0062:
            int[] r9 = wd.c.f16801a
            if (r11 >= r5) goto L_0x0069
            r9 = r9[r11]
            goto L_0x006a
        L_0x0069:
            r9 = r6
        L_0x006a:
            if (r9 == r6) goto L_0x007a
            r9 = r8
        L_0x006d:
            int r4 = r4 + 1
            goto L_0x004e
        L_0x0070:
            if (r9 == 0) goto L_0x0075
            ud.f r4 = ud.f.ALPHANUMERIC
            goto L_0x007b
        L_0x0075:
            if (r10 == 0) goto L_0x007a
            ud.f r4 = ud.f.NUMERIC
            goto L_0x007b
        L_0x007a:
            r4 = r1
        L_0x007b:
            cd.a r9 = new cd.a
            r9.<init>()
            int r10 = r4.f15513b
            r11 = 4
            r9.b(r10, r11)
            cd.a r10 = new cd.a
            r10.<init>()
            int r12 = r4.ordinal()
            r13 = 10
            r14 = 2
            r15 = 7
            r7 = 8
            if (r12 == r8) goto L_0x0168
            r8 = 6
            if (r12 == r14) goto L_0x0126
            if (r12 == r11) goto L_0x010e
            if (r12 != r8) goto L_0x00fe
            byte[] r2 = r0.getBytes(r3)     // Catch:{ UnsupportedEncodingException -> 0x00f6 }
            int r3 = r2.length
            int r3 = r3 % r14
            if (r3 != 0) goto L_0x00ee
            int r3 = r2.length
            int r3 = r3 + r6
            r5 = 0
        L_0x00a9:
            if (r5 >= r3) goto L_0x01a8
            byte r8 = r2[r5]
            r8 = r8 & 255(0xff, float:3.57E-43)
            int r12 = r5 + 1
            byte r12 = r2[r12]
            r12 = r12 & 255(0xff, float:3.57E-43)
            int r8 = r8 << r7
            r8 = r8 | r12
            r12 = 33088(0x8140, float:4.6366E-41)
            if (r8 < r12) goto L_0x00c5
            r12 = 40956(0x9ffc, float:5.7392E-41)
            if (r8 > r12) goto L_0x00c5
            r12 = 33088(0x8140, float:4.6366E-41)
            goto L_0x00d2
        L_0x00c5:
            r12 = 57408(0xe040, float:8.0446E-41)
            if (r8 < r12) goto L_0x00d4
            r12 = 60351(0xebbf, float:8.457E-41)
            if (r8 > r12) goto L_0x00d4
            r12 = 49472(0xc140, float:6.9325E-41)
        L_0x00d2:
            int r8 = r8 - r12
            goto L_0x00d5
        L_0x00d4:
            r8 = r6
        L_0x00d5:
            if (r8 == r6) goto L_0x00e6
            int r12 = r8 >> 8
            int r12 = r12 * 192
            r8 = r8 & 255(0xff, float:3.57E-43)
            int r12 = r12 + r8
            r8 = 13
            r10.b(r12, r8)
            int r5 = r5 + 2
            goto L_0x00a9
        L_0x00e6:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = "Invalid byte sequence"
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x00ee:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = "Kanji byte size not even"
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x00f6:
            r0 = move-exception
            r1 = r0
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            r0.<init>((java.io.UnsupportedEncodingException) r1)
            throw r0
        L_0x00fe:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = java.lang.String.valueOf(r4)
            java.lang.String r2 = "Invalid mode: "
            java.lang.String r1 = r2.concat(r1)
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x010e:
            byte[] r2 = r0.getBytes(r2)     // Catch:{ UnsupportedEncodingException -> 0x011e }
            int r3 = r2.length
            r5 = 0
        L_0x0114:
            if (r5 >= r3) goto L_0x01a8
            byte r8 = r2[r5]
            r10.b(r8, r7)
            int r5 = r5 + 1
            goto L_0x0114
        L_0x011e:
            r0 = move-exception
            r1 = r0
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            r0.<init>((java.io.UnsupportedEncodingException) r1)
            throw r0
        L_0x0126:
            int r2 = r25.length()
            r3 = 0
        L_0x012b:
            if (r3 >= r2) goto L_0x01a8
            char r12 = r0.charAt(r3)
            int[] r17 = wd.c.f16801a
            if (r12 >= r5) goto L_0x0138
            r12 = r17[r12]
            goto L_0x0139
        L_0x0138:
            r12 = r6
        L_0x0139:
            if (r12 == r6) goto L_0x0162
            int r14 = r3 + 1
            if (r14 >= r2) goto L_0x015c
            char r14 = r0.charAt(r14)
            if (r14 >= r5) goto L_0x0148
            r14 = r17[r14]
            goto L_0x0149
        L_0x0148:
            r14 = r6
        L_0x0149:
            if (r14 == r6) goto L_0x0156
            int r12 = r12 * 45
            int r12 = r12 + r14
            r14 = 11
            r10.b(r12, r14)
            int r3 = r3 + 2
            goto L_0x0160
        L_0x0156:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            r0.<init>()
            throw r0
        L_0x015c:
            r10.b(r12, r8)
            r3 = r14
        L_0x0160:
            r14 = 2
            goto L_0x012b
        L_0x0162:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            r0.<init>()
            throw r0
        L_0x0168:
            int r2 = r25.length()
            r3 = 0
        L_0x016d:
            if (r3 >= r2) goto L_0x01a8
            char r5 = r0.charAt(r3)
            int r5 = r5 + -48
            int r8 = r3 + 2
            if (r8 >= r2) goto L_0x0192
            int r12 = r3 + 1
            char r12 = r0.charAt(r12)
            int r12 = r12 + -48
            char r8 = r0.charAt(r8)
            int r8 = r8 + -48
            int r5 = r5 * 100
            int r12 = r12 * r13
            int r12 = r12 + r5
            int r12 = r12 + r8
            r10.b(r12, r13)
            int r3 = r3 + 3
            goto L_0x016d
        L_0x0192:
            int r3 = r3 + 1
            if (r3 >= r2) goto L_0x01a4
            char r3 = r0.charAt(r3)
            int r3 = r3 + -48
            int r5 = r5 * 10
            int r5 = r5 + r3
            r10.b(r5, r15)
            r3 = r8
            goto L_0x016d
        L_0x01a4:
            r10.b(r5, r11)
            goto L_0x016d
        L_0x01a8:
            r2 = 1
            ud.h r3 = ud.h.c(r2)
            int r2 = r9.f4688b
            int r3 = r4.b(r3)
            int r3 = r3 + r2
            int r2 = r10.f4688b
            int r3 = r3 + r2
            r2 = 1
        L_0x01b8:
            java.lang.String r5 = "Data too big"
            r8 = 40
            if (r2 > r8) goto L_0x06bc
            ud.h r12 = ud.h.c(r2)
            int r14 = r12.f15520d
            ud.h$b[] r13 = r12.f15519c
            r18 = 0
            r13 = r13[r18]
            int r6 = r13.f15523a
            ud.h$a[] r13 = r13.f15524b
            int r11 = r13.length
            r8 = 0
            r20 = 0
        L_0x01d2:
            if (r8 >= r11) goto L_0x01df
            r7 = r13[r8]
            int r7 = r7.f15521a
            int r20 = r20 + r7
            int r8 = r8 + 1
            r7 = 8
            goto L_0x01d2
        L_0x01df:
            int r20 = r20 * r6
            int r14 = r14 - r20
            int r6 = r3 + 7
            r7 = 8
            int r6 = r6 / r7
            if (r14 < r6) goto L_0x01ec
            r6 = 1
            goto L_0x01ed
        L_0x01ec:
            r6 = 0
        L_0x01ed:
            if (r6 == 0) goto L_0x06ab
            int r2 = r9.f4688b
            int r3 = r4.b(r12)
            int r3 = r3 + r2
            int r2 = r10.f4688b
            int r3 = r3 + r2
            r2 = 1
        L_0x01fa:
            r6 = 40
            if (r2 > r6) goto L_0x06a5
            ud.h r7 = ud.h.c(r2)
            int r8 = r7.f15520d
            ud.h$b[] r11 = r7.f15519c
            r12 = 0
            r11 = r11[r12]
            int r12 = r11.f15523a
            ud.h$a[] r11 = r11.f15524b
            int r13 = r11.length
            r14 = 0
            r19 = 0
        L_0x0211:
            if (r14 >= r13) goto L_0x021e
            r6 = r11[r14]
            int r6 = r6.f15521a
            int r19 = r19 + r6
            int r14 = r14 + 1
            r6 = 40
            goto L_0x0211
        L_0x021e:
            int r19 = r19 * r12
            int r8 = r8 - r19
            int r6 = r3 + 7
            r11 = 8
            int r6 = r6 / r11
            if (r8 < r6) goto L_0x022b
            r6 = 1
            goto L_0x022c
        L_0x022b:
            r6 = 0
        L_0x022c:
            if (r6 == 0) goto L_0x0698
            cd.a r2 = new cd.a
            r2.<init>()
            int r3 = r9.f4688b
            int r5 = r2.f4688b
            int r5 = r5 + r3
            r2.c(r5)
            r5 = 0
        L_0x023c:
            if (r5 >= r3) goto L_0x0248
            boolean r6 = r9.e(r5)
            r2.a(r6)
            int r5 = r5 + 1
            goto L_0x023c
        L_0x0248:
            if (r4 != r1) goto L_0x0251
            int r0 = r10.f4688b
            int r0 = r0 + r15
            r1 = 8
            int r0 = r0 / r1
            goto L_0x0255
        L_0x0251:
            int r0 = r25.length()
        L_0x0255:
            int r1 = r4.b(r7)
            r3 = 1
            int r4 = r3 << r1
            if (r0 >= r4) goto L_0x067c
            r2.b(r0, r1)
            int r0 = r10.f4688b
            int r1 = r2.f4688b
            int r1 = r1 + r0
            r2.c(r1)
            r1 = 0
        L_0x026a:
            if (r1 >= r0) goto L_0x0276
            boolean r3 = r10.e(r1)
            r2.a(r3)
            int r1 = r1 + 1
            goto L_0x026a
        L_0x0276:
            ud.h$b[] r0 = r7.f15519c
            r1 = 1
            int r3 = v.v.g(r1)
            r0 = r0[r3]
            int r1 = r7.f15520d
            int r3 = r0.f15523a
            ud.h$a[] r4 = r0.f15524b
            int r5 = r4.length
            r6 = 0
            r8 = 0
        L_0x0288:
            if (r6 >= r5) goto L_0x0292
            r9 = r4[r6]
            int r9 = r9.f15521a
            int r8 = r8 + r9
            int r6 = r6 + 1
            goto L_0x0288
        L_0x0292:
            int r8 = r8 * r3
            int r1 = r1 - r8
            int r3 = r1 << 3
            int r4 = r2.f4688b
            if (r4 > r3) goto L_0x065e
            r4 = 0
        L_0x029b:
            r5 = 4
            if (r4 >= r5) goto L_0x02a9
            int r5 = r2.f4688b
            if (r5 >= r3) goto L_0x02a9
            r5 = 0
            r2.a(r5)
            int r4 = r4 + 1
            goto L_0x029b
        L_0x02a9:
            r5 = 0
            int r4 = r2.f4688b
            r4 = r4 & r15
            r6 = 8
            if (r4 <= 0) goto L_0x02ba
        L_0x02b1:
            if (r4 >= r6) goto L_0x02ba
            r2.a(r5)
            int r4 = r4 + 1
            r5 = 0
            goto L_0x02b1
        L_0x02ba:
            int r4 = r2.f4688b
            int r4 = r4 + r15
            int r4 = r4 / r6
            int r4 = r1 - r4
            r5 = 0
        L_0x02c1:
            if (r5 >= r4) goto L_0x02d4
            r8 = r5 & 1
            if (r8 != 0) goto L_0x02ca
            r6 = 236(0xec, float:3.31E-43)
            goto L_0x02cc
        L_0x02ca:
            r6 = 17
        L_0x02cc:
            r8 = 8
            r2.b(r6, r8)
            int r5 = r5 + 1
            goto L_0x02c1
        L_0x02d4:
            int r4 = r2.f4688b
            if (r4 != r3) goto L_0x0656
            int r3 = r7.f15520d
            ud.h$a[] r0 = r0.f15524b
            int r4 = r0.length
            r5 = 0
            r8 = 0
        L_0x02df:
            if (r5 >= r4) goto L_0x02e9
            r9 = r0[r5]
            int r9 = r9.f15521a
            int r8 = r8 + r9
            int r5 = r5 + 1
            goto L_0x02df
        L_0x02e9:
            int r0 = r2.f4688b
            int r0 = r0 + r15
            r4 = 8
            int r0 = r0 / r4
            if (r0 != r1) goto L_0x064e
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>(r8)
            r4 = 0
            r5 = 0
            r9 = 0
            r10 = 0
        L_0x02fa:
            if (r4 >= r8) goto L_0x03d8
            r11 = 1
            int[] r12 = new int[r11]
            int[] r13 = new int[r11]
            if (r4 >= r8) goto L_0x03d0
            int r11 = r3 % r8
            int r14 = r8 - r11
            int r19 = r3 / r8
            int r20 = r19 + 1
            int r21 = r1 / r8
            int r22 = r21 + 1
            int r6 = r19 - r21
            int r15 = r20 - r22
            if (r6 != r15) goto L_0x03c8
            r23 = r7
            int r7 = r14 + r11
            if (r8 != r7) goto L_0x03c0
            int r7 = r21 + r6
            int r7 = r7 * r14
            int r20 = r22 + r15
            int r20 = r20 * r11
            int r7 = r20 + r7
            if (r3 != r7) goto L_0x03b8
            r7 = 0
            if (r4 >= r14) goto L_0x032e
            r12[r7] = r21
            r13[r7] = r6
            goto L_0x0332
        L_0x032e:
            r12[r7] = r22
            r13[r7] = r15
        L_0x0332:
            r6 = r12[r7]
            byte[] r7 = new byte[r6]
            int r11 = r5 << 3
            r14 = r11
            r11 = 0
        L_0x033a:
            if (r11 >= r6) goto L_0x0369
            r21 = r3
            r20 = r8
            r8 = r14
            r3 = 8
            r14 = 0
            r15 = 0
        L_0x0345:
            if (r14 >= r3) goto L_0x035c
            boolean r3 = r2.e(r8)
            if (r3 == 0) goto L_0x0355
            int r3 = 7 - r14
            r16 = 1
            int r3 = r16 << r3
            r3 = r3 | r15
            r15 = r3
        L_0x0355:
            int r8 = r8 + 1
            int r14 = r14 + 1
            r3 = 8
            goto L_0x0345
        L_0x035c:
            int r3 = r11 + 0
            byte r14 = (byte) r15
            r7[r3] = r14
            int r11 = r11 + 1
            r14 = r8
            r8 = r20
            r3 = r21
            goto L_0x033a
        L_0x0369:
            r21 = r3
            r20 = r8
            r3 = 0
            r8 = r13[r3]
            int r3 = r6 + r8
            int[] r3 = new int[r3]
            r11 = 0
        L_0x0375:
            if (r11 >= r6) goto L_0x0380
            byte r13 = r7[r11]
            r13 = r13 & 255(0xff, float:3.57E-43)
            r3[r11] = r13
            int r11 = r11 + 1
            goto L_0x0375
        L_0x0380:
            x2.g r11 = new x2.g
            ed.a r13 = ed.a.f9343l
            r11.<init>((ed.a) r13)
            r11.b(r3, r8)
            byte[] r11 = new byte[r8]
            r13 = 0
        L_0x038d:
            if (r13 >= r8) goto L_0x0399
            int r14 = r6 + r13
            r14 = r3[r14]
            byte r14 = (byte) r14
            r11[r13] = r14
            int r13 = r13 + 1
            goto L_0x038d
        L_0x0399:
            wd.a r3 = new wd.a
            r3.<init>(r7, r11)
            r0.add(r3)
            int r9 = java.lang.Math.max(r9, r6)
            int r10 = java.lang.Math.max(r10, r8)
            r3 = 0
            r6 = r12[r3]
            int r5 = r5 + r6
            int r4 = r4 + 1
            r8 = r20
            r3 = r21
            r7 = r23
            r15 = 7
            goto L_0x02fa
        L_0x03b8:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = "Total bytes mismatch"
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x03c0:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = "RS blocks mismatch"
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x03c8:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = "EC bytes mismatch"
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x03d0:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = "Block ID too large"
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x03d8:
            r21 = r3
            r23 = r7
            if (r1 != r5) goto L_0x0646
            cd.a r1 = new cd.a
            r1.<init>()
            r2 = 0
        L_0x03e4:
            if (r2 >= r9) goto L_0x0406
            java.util.Iterator r3 = r0.iterator()
        L_0x03ea:
            boolean r4 = r3.hasNext()
            if (r4 == 0) goto L_0x0403
            java.lang.Object r4 = r3.next()
            wd.a r4 = (wd.a) r4
            byte[] r4 = r4.f16796a
            int r5 = r4.length
            if (r2 >= r5) goto L_0x03ea
            byte r4 = r4[r2]
            r5 = 8
            r1.b(r4, r5)
            goto L_0x03ea
        L_0x0403:
            int r2 = r2 + 1
            goto L_0x03e4
        L_0x0406:
            r2 = 0
        L_0x0407:
            if (r2 >= r10) goto L_0x042b
            java.util.Iterator r3 = r0.iterator()
        L_0x040d:
            boolean r4 = r3.hasNext()
            if (r4 == 0) goto L_0x0426
            java.lang.Object r4 = r3.next()
            wd.a r4 = (wd.a) r4
            byte[] r4 = r4.f16797b
            int r5 = r4.length
            if (r2 >= r5) goto L_0x040d
            byte r4 = r4[r2]
            r5 = 8
            r1.b(r4, r5)
            goto L_0x040d
        L_0x0426:
            r5 = 8
            int r2 = r2 + 1
            goto L_0x0407
        L_0x042b:
            r5 = 8
            int r0 = r1.f4688b
            r2 = 7
            int r0 = r0 + r2
            int r0 = r0 / r5
            r2 = r21
            if (r2 != r0) goto L_0x061e
            r0 = r23
            int r2 = r0.f15517a
            r6 = 4
            int r2 = r2 * r6
            r3 = 17
            int r2 = r2 + r3
            wd.b r3 = new wd.b
            r3.<init>(r2, r2)
            r2 = 2147483647(0x7fffffff, float:NaN)
            r4 = 0
            r5 = -1
        L_0x0449:
            r6 = 8
            if (r4 >= r6) goto L_0x05d3
            r6 = 1
            p3.l0.j(r1, r6, r0, r4, r3)
            int r7 = m9.b.d(r3, r6)
            r6 = 0
            int r8 = m9.b.d(r3, r6)
            int r8 = r8 + r7
            byte[][] r6 = r3.f16798a
            int r7 = r3.f16799b
            int r9 = r3.f16800c
            r10 = 0
            r11 = 0
        L_0x0463:
            r12 = -1
            int r13 = r9 + -1
            if (r10 >= r13) goto L_0x048e
            r13 = r6[r10]
            r14 = r11
            r11 = 0
        L_0x046c:
            int r15 = r7 + -1
            if (r11 >= r15) goto L_0x048a
            byte r15 = r13[r11]
            int r18 = r11 + 1
            byte r12 = r13[r18]
            if (r15 != r12) goto L_0x0486
            int r12 = r10 + 1
            r12 = r6[r12]
            byte r11 = r12[r11]
            if (r15 != r11) goto L_0x0486
            byte r11 = r12[r18]
            if (r15 != r11) goto L_0x0486
            int r14 = r14 + 1
        L_0x0486:
            r11 = r18
            r12 = -1
            goto L_0x046c
        L_0x048a:
            int r10 = r10 + 1
            r11 = r14
            goto L_0x0463
        L_0x048e:
            int r11 = r11 * 3
            int r11 = r11 + r8
            byte[][] r6 = r3.f16798a
            int r7 = r3.f16799b
            int r8 = r3.f16800c
            r9 = 0
            r18 = 0
        L_0x049a:
            if (r9 >= r8) goto L_0x0597
            r10 = 0
        L_0x049d:
            if (r10 >= r7) goto L_0x0590
            r12 = r6[r9]
            int r13 = r10 + 6
            if (r13 >= r7) goto L_0x050d
            byte r14 = r12[r10]
            r15 = 1
            if (r14 != r15) goto L_0x050d
            int r14 = r10 + 1
            byte r14 = r12[r14]
            if (r14 != 0) goto L_0x050d
            int r14 = r10 + 2
            byte r14 = r12[r14]
            if (r14 != r15) goto L_0x050d
            int r14 = r10 + 3
            byte r14 = r12[r14]
            if (r14 != r15) goto L_0x050d
            int r14 = r10 + 4
            byte r14 = r12[r14]
            if (r14 != r15) goto L_0x050d
            int r14 = r10 + 5
            byte r14 = r12[r14]
            if (r14 != 0) goto L_0x050d
            byte r13 = r12[r13]
            if (r13 != r15) goto L_0x050d
            int r13 = r10 + -4
            r14 = 0
            int r13 = java.lang.Math.max(r13, r14)
            int r14 = r12.length
            int r14 = java.lang.Math.min(r10, r14)
        L_0x04d8:
            if (r13 >= r14) goto L_0x04e8
            r19 = r7
            byte r7 = r12[r13]
            if (r7 != r15) goto L_0x04e2
            r7 = 0
            goto L_0x04eb
        L_0x04e2:
            int r13 = r13 + 1
            r7 = r19
            r15 = 1
            goto L_0x04d8
        L_0x04e8:
            r19 = r7
            r7 = 1
        L_0x04eb:
            if (r7 != 0) goto L_0x050a
            int r7 = r10 + 7
            int r13 = r10 + 11
            r14 = 0
            int r7 = java.lang.Math.max(r7, r14)
            int r14 = r12.length
            int r13 = java.lang.Math.min(r13, r14)
        L_0x04fb:
            if (r7 >= r13) goto L_0x0507
            byte r14 = r12[r7]
            r15 = 1
            if (r14 != r15) goto L_0x0504
            r7 = 0
            goto L_0x0508
        L_0x0504:
            int r7 = r7 + 1
            goto L_0x04fb
        L_0x0507:
            r7 = 1
        L_0x0508:
            if (r7 == 0) goto L_0x050f
        L_0x050a:
            int r18 = r18 + 1
            goto L_0x050f
        L_0x050d:
            r19 = r7
        L_0x050f:
            int r7 = r9 + 6
            if (r7 >= r8) goto L_0x0589
            r12 = r6[r9]
            byte r12 = r12[r10]
            r13 = 1
            if (r12 != r13) goto L_0x0589
            int r12 = r9 + 1
            r12 = r6[r12]
            byte r12 = r12[r10]
            if (r12 != 0) goto L_0x0589
            int r12 = r9 + 2
            r12 = r6[r12]
            byte r12 = r12[r10]
            if (r12 != r13) goto L_0x0589
            int r12 = r9 + 3
            r12 = r6[r12]
            byte r12 = r12[r10]
            if (r12 != r13) goto L_0x0589
            int r12 = r9 + 4
            r12 = r6[r12]
            byte r12 = r12[r10]
            if (r12 != r13) goto L_0x0589
            int r12 = r9 + 5
            r12 = r6[r12]
            byte r12 = r12[r10]
            if (r12 != 0) goto L_0x0589
            r7 = r6[r7]
            byte r7 = r7[r10]
            if (r7 != r13) goto L_0x0589
            int r7 = r9 + -4
            r12 = 0
            int r7 = java.lang.Math.max(r7, r12)
            int r12 = r6.length
            int r12 = java.lang.Math.min(r9, r12)
        L_0x0554:
            if (r7 >= r12) goto L_0x0562
            r14 = r6[r7]
            byte r14 = r14[r10]
            if (r14 != r13) goto L_0x055e
            r7 = 0
            goto L_0x0563
        L_0x055e:
            int r7 = r7 + 1
            r13 = 1
            goto L_0x0554
        L_0x0562:
            r7 = 1
        L_0x0563:
            if (r7 != 0) goto L_0x0585
            int r7 = r9 + 7
            int r12 = r9 + 11
            r13 = 0
            int r7 = java.lang.Math.max(r7, r13)
            int r14 = r6.length
            int r12 = java.lang.Math.min(r12, r14)
        L_0x0573:
            if (r7 >= r12) goto L_0x0581
            r14 = r6[r7]
            byte r14 = r14[r10]
            r15 = 1
            if (r14 != r15) goto L_0x057e
            r7 = r13
            goto L_0x0582
        L_0x057e:
            int r7 = r7 + 1
            goto L_0x0573
        L_0x0581:
            r7 = 1
        L_0x0582:
            if (r7 == 0) goto L_0x058a
            goto L_0x0586
        L_0x0585:
            r13 = 0
        L_0x0586:
            int r18 = r18 + 1
            goto L_0x058a
        L_0x0589:
            r13 = 0
        L_0x058a:
            int r10 = r10 + 1
            r7 = r19
            goto L_0x049d
        L_0x0590:
            r19 = r7
            r13 = 0
            int r9 = r9 + 1
            goto L_0x049a
        L_0x0597:
            r13 = 0
            int r18 = r18 * 40
            int r18 = r18 + r11
            byte[][] r6 = r3.f16798a
            int r7 = r3.f16799b
            int r8 = r3.f16800c
            r9 = r13
            r10 = r9
        L_0x05a4:
            if (r9 >= r8) goto L_0x05b8
            r11 = r6[r9]
            r12 = r13
        L_0x05a9:
            if (r12 >= r7) goto L_0x05b5
            byte r14 = r11[r12]
            r15 = 1
            if (r14 != r15) goto L_0x05b2
            int r10 = r10 + 1
        L_0x05b2:
            int r12 = r12 + 1
            goto L_0x05a9
        L_0x05b5:
            int r9 = r9 + 1
            goto L_0x05a4
        L_0x05b8:
            int r6 = r3.f16800c
            int r7 = r3.f16799b
            int r6 = r6 * r7
            int r7 = r10 << 1
            int r7 = r7 - r6
            int r7 = java.lang.Math.abs(r7)
            r8 = 10
            int r7 = r7 * r8
            int r7 = r7 / r6
            int r7 = r7 * r8
            int r7 = r7 + r18
            if (r7 >= r2) goto L_0x05cf
            r5 = r4
            r2 = r7
        L_0x05cf:
            int r4 = r4 + 1
            goto L_0x0449
        L_0x05d3:
            r13 = 0
            r2 = 1
            p3.l0.j(r1, r2, r0, r5, r3)
            int r0 = r3.f16799b
            int r1 = r3.f16800c
            int r2 = r0 + 8
            r4 = 8
            int r7 = r4 + r1
            r4 = 500(0x1f4, float:7.0E-43)
            int r5 = java.lang.Math.max(r4, r2)
            int r4 = java.lang.Math.max(r4, r7)
            int r2 = r5 / r2
            int r6 = r4 / r7
            int r2 = java.lang.Math.min(r2, r6)
            int r6 = r0 * r2
            int r6 = r5 - r6
            r7 = 2
            int r6 = r6 / r7
            int r8 = r1 * r2
            int r8 = r4 - r8
            int r8 = r8 / r7
            cd.b r7 = new cd.b
            r7.<init>(r5, r4)
            r4 = r13
        L_0x0605:
            if (r4 >= r1) goto L_0x061d
            r9 = r6
            r5 = r13
        L_0x0609:
            if (r5 >= r0) goto L_0x0619
            byte r10 = r3.a(r5, r4)
            r11 = 1
            if (r10 != r11) goto L_0x0615
            r7.j(r9, r8, r2, r2)
        L_0x0615:
            int r5 = r5 + 1
            int r9 = r9 + r2
            goto L_0x0609
        L_0x0619:
            int r4 = r4 + 1
            int r8 = r8 + r2
            goto L_0x0605
        L_0x061d:
            return r7
        L_0x061e:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            java.lang.String r4 = "Interleaving error: "
            r3.<init>(r4)
            r3.append(r2)
            java.lang.String r2 = " and "
            r3.append(r2)
            int r1 = r1.f4688b
            r11 = 7
            int r1 = r1 + r11
            r12 = 8
            int r1 = r1 / r12
            r3.append(r1)
            java.lang.String r1 = " differ."
            r3.append(r1)
            java.lang.String r1 = r3.toString()
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x0646:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = "Data bytes does not match offset"
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x064e:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = "Number of bits and data bytes does not match"
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x0656:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.String r1 = "Bits size does not equal capacity"
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x065e:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            java.lang.String r4 = "data bits cannot fit in the QR Code"
            r1.<init>(r4)
            int r2 = r2.f4688b
            r1.append(r2)
            java.lang.String r2 = " > "
            r1.append(r2)
            r1.append(r3)
            java.lang.String r1 = r1.toString()
            r0.<init>((java.lang.String) r1)
            throw r0
        L_0x067c:
            com.google.zxing.WriterException r1 = new com.google.zxing.WriterException
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r0)
            java.lang.String r0 = " is bigger than "
            r2.append(r0)
            r14 = 1
            int r4 = r4 - r14
            r2.append(r4)
            java.lang.String r0 = r2.toString()
            r1.<init>((java.lang.String) r0)
            throw r1
        L_0x0698:
            r11 = r15
            r6 = 4
            r7 = 2
            r8 = 10
            r12 = 8
            r13 = 0
            r14 = 1
            int r2 = r2 + 1
            goto L_0x01fa
        L_0x06a5:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            r0.<init>((java.lang.String) r5)
            throw r0
        L_0x06ab:
            r11 = r15
            r6 = 4
            r7 = 2
            r8 = 10
            r12 = 8
            r13 = 0
            r14 = 1
            int r2 = r2 + 1
            r13 = r8
            r7 = r12
            r11 = r6
            r6 = -1
            goto L_0x01b8
        L_0x06bc:
            com.google.zxing.WriterException r0 = new com.google.zxing.WriterException
            r0.<init>((java.lang.String) r5)
            throw r0
        L_0x06c2:
            java.lang.IllegalArgumentException r0 = new java.lang.IllegalArgumentException
            java.lang.String r1 = java.lang.String.valueOf(r26)
            java.lang.String r2 = "Can only encode QR_CODE, but got "
            java.lang.String r1 = r2.concat(r1)
            r0.<init>(r1)
            throw r0
        L_0x06d2:
            java.lang.IllegalArgumentException r0 = new java.lang.IllegalArgumentException
            java.lang.String r1 = "Found empty contents"
            r0.<init>(r1)
            throw r0
        */
        throw new UnsupportedOperationException("Method not decompiled: al.g0.e(java.lang.String, uc.a):cd.b");
    }

    public u f(u uVar, s4.h hVar) {
        a.b bVar;
        byte[] bArr;
        ByteBuffer asReadOnlyBuffer = ((f5.c) uVar.get()).f9925a.f9935a.f9937a.a().asReadOnlyBuffer();
        AtomicReference<byte[]> atomicReference = o5.a.f13728a;
        if (asReadOnlyBuffer.isReadOnly() || !asReadOnlyBuffer.hasArray()) {
            bVar = null;
        } else {
            bVar = new a.b(asReadOnlyBuffer.array(), asReadOnlyBuffer.arrayOffset(), asReadOnlyBuffer.limit());
        }
        if (bVar != null && bVar.f13731a == 0 && bVar.f13732b == bVar.f13733c.length) {
            bArr = asReadOnlyBuffer.array();
        } else {
            ByteBuffer asReadOnlyBuffer2 = asReadOnlyBuffer.asReadOnlyBuffer();
            byte[] bArr2 = new byte[asReadOnlyBuffer2.limit()];
            ByteBuffer byteBuffer = (ByteBuffer) asReadOnlyBuffer2.position(0);
            asReadOnlyBuffer2.get(bArr2);
            bArr = bArr2;
        }
        return new c5.b(bArr);
    }

    public long g() {
        int i10 = zk.a.f23785d;
        return l0.S0(SystemClock.elapsedRealtime(), zk.c.MILLISECONDS);
    }

    public void h() {
    }

    public boolean i(Object obj, File file, s4.h hVar) {
        try {
            o5.a.c((ByteBuffer) obj, file);
            return true;
        } catch (IOException unused) {
            Log.isLoggable("ByteBufferEncoder", 3);
            return false;
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:15:0x0040  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.lang.StackTraceElement[] j(java.lang.StackTraceElement[] r15) {
        /*
            r14 = this;
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            int r1 = r15.length
            java.lang.StackTraceElement[] r1 = new java.lang.StackTraceElement[r1]
            r2 = 0
            r3 = 1
            r4 = r2
            r5 = r4
            r6 = r3
        L_0x000d:
            int r7 = r15.length
            if (r4 >= r7) goto L_0x0066
            r7 = r15[r4]
            java.lang.Object r8 = r0.get(r7)
            java.lang.Integer r8 = (java.lang.Integer) r8
            if (r8 == 0) goto L_0x0054
            int r9 = r8.intValue()
            int r10 = r4 - r9
            int r11 = r4 + r10
            int r12 = r15.length
            if (r11 <= r12) goto L_0x0026
            goto L_0x0037
        L_0x0026:
            r11 = r2
        L_0x0027:
            if (r11 >= r10) goto L_0x003c
            int r12 = r9 + r11
            r12 = r15[r12]
            int r13 = r4 + r11
            r13 = r15[r13]
            boolean r12 = r12.equals(r13)
            if (r12 != 0) goto L_0x0039
        L_0x0037:
            r9 = r2
            goto L_0x003d
        L_0x0039:
            int r11 = r11 + 1
            goto L_0x0027
        L_0x003c:
            r9 = r3
        L_0x003d:
            if (r9 != 0) goto L_0x0040
            goto L_0x0054
        L_0x0040:
            int r8 = r8.intValue()
            int r8 = r4 - r8
            r9 = 10
            if (r6 >= r9) goto L_0x0050
            java.lang.System.arraycopy(r15, r4, r1, r5, r8)
            int r5 = r5 + r8
            int r6 = r6 + 1
        L_0x0050:
            int r8 = r8 + -1
            int r8 = r8 + r4
            goto L_0x005c
        L_0x0054:
            r6 = r15[r4]
            r1[r5] = r6
            int r5 = r5 + 1
            r6 = r3
            r8 = r4
        L_0x005c:
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r0.put(r7, r4)
            int r4 = r8 + 1
            goto L_0x000d
        L_0x0066:
            java.lang.StackTraceElement[] r0 = new java.lang.StackTraceElement[r5]
            java.lang.System.arraycopy(r1, r2, r0, r2, r5)
            int r1 = r15.length
            if (r5 >= r1) goto L_0x006f
            return r0
        L_0x006f:
            return r15
        */
        throw new UnsupportedOperationException("Method not decompiled: al.g0.j(java.lang.StackTraceElement[]):java.lang.StackTraceElement[]");
    }

    public Object k(ca.s sVar) {
        lc.h hVar = (lc.h) sVar.a(lc.h.class);
        return new mc.b();
    }

    public void l(d3.c cVar) {
        cVar.o("UPDATE WorkSpec SET `last_enqueue_time` = -1 WHERE `last_enqueue_time` = 0");
    }

    public void m(hd.d dVar) {
        boolean z10;
        StringBuilder p10 = android.support.v4.media.a.p(0);
        while (true) {
            if (!dVar.c()) {
                break;
            }
            p10.append(dVar.b());
            int i10 = dVar.f10745d + 1;
            dVar.f10745d = i10;
            if (m9.b.M(dVar.f10742a, i10, 5) != 5) {
                dVar.f10746e = 0;
                break;
            }
        }
        int length = p10.length() - 1;
        int a10 = dVar.a() + length + 1;
        dVar.d(a10);
        if (dVar.f10747f.f10755b - a10 > 0) {
            z10 = true;
        } else {
            z10 = false;
        }
        if (dVar.c() || z10) {
            if (length <= 249) {
                p10.setCharAt(0, (char) length);
            } else if (length <= 1555) {
                p10.setCharAt(0, (char) ((length / 250) + 249));
                p10.insert(1, (char) (length % 250));
            } else {
                throw new IllegalStateException("Message length not in valid ranges: ".concat(String.valueOf(length)));
            }
        }
        int length2 = p10.length();
        for (int i11 = 0; i11 < length2; i11++) {
            int a11 = (((dVar.a() + 1) * 149) % 255) + 1 + p10.charAt(i11);
            if (a11 > 255) {
                a11 -= 256;
            }
            dVar.e((char) a11);
        }
    }

    public long n() {
        return System.currentTimeMillis() * 1000;
    }

    public void o(s4.e eVar, u4.g gVar) {
    }

    public void onFailure(Exception exc) {
    }

    public Object p() {
        return new ArrayDeque();
    }

    public File q(s4.e eVar) {
        return null;
    }

    public Object then(Task task) {
        if (task.isSuccessful()) {
            return null;
        }
        task.getException();
        return null;
    }

    public /* synthetic */ g0(int i10) {
    }

    public /* synthetic */ g0(String str, String str2) {
    }

    public Object c(CorruptionException corruptionException) {
        throw corruptionException;
    }
}
